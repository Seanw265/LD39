// Generated by Haxe 3.3.0
#ifndef INCLUDED_BuildingInfo
#define INCLUDED_BuildingInfo

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS0(BuildingInfo)
HX_DECLARE_CLASS1(haxe,IMap)
HX_DECLARE_CLASS2(haxe,ds,StringMap)



class HXCPP_CLASS_ATTRIBUTES BuildingInfo_obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef BuildingInfo_obj OBJ_;
		BuildingInfo_obj();

	public:
		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="BuildingInfo")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,false,"BuildingInfo"); }
		static hx::ObjectPtr< BuildingInfo_obj > __new();
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~BuildingInfo_obj();

		HX_DO_RTTI_ALL;
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, hx::PropertyAccess inCallProp);
		static bool __SetStatic(const ::String &inString, Dynamic &ioValue, hx::PropertyAccess inCallProp);
		static void __register();
		::String __ToString() const { return HX_HCSTRING("BuildingInfo","\x22","\xdd","\x82","\x95"); }

		static void __boot();
		static ::Array< ::String > types;
		static  ::haxe::ds::StringMap data;
};


#endif /* INCLUDED_BuildingInfo */ 
