// Generated by Haxe 3.3.0
#ifndef INCLUDED_EndGameSubState
#define INCLUDED_EndGameSubState

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

#ifndef INCLUDED_flixel_FlxSubState
#include <flixel/FlxSubState.h>
#endif
HX_DECLARE_CLASS0(EndGameSubState)
HX_DECLARE_CLASS0(PlayState)
HX_DECLARE_CLASS1(flixel,FlxBasic)
HX_DECLARE_CLASS1(flixel,FlxState)
HX_DECLARE_CLASS1(flixel,FlxSubState)
HX_DECLARE_CLASS2(flixel,group,FlxTypedGroup)
HX_DECLARE_CLASS2(flixel,util,IFlxDestroyable)



class HXCPP_CLASS_ATTRIBUTES EndGameSubState_obj : public  ::flixel::FlxSubState_obj
{
	public:
		typedef  ::flixel::FlxSubState_obj super;
		typedef EndGameSubState_obj OBJ_;
		EndGameSubState_obj();

	public:
		void __construct( ::PlayState playState);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="EndGameSubState")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,true,"EndGameSubState"); }
		static hx::ObjectPtr< EndGameSubState_obj > __new( ::PlayState playState);
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~EndGameSubState_obj();

		HX_DO_RTTI_ALL;
		hx::Val __Field(const ::String &inString, hx::PropertyAccess inCallProp);
		hx::Val __SetField(const ::String &inString,const hx::Val &inValue, hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		::String __ToString() const { return HX_HCSTRING("EndGameSubState","\xde","\xf2","\xaa","\x09"); }

		 ::PlayState playState;
		 ::Dynamic add( ::Dynamic _tmp_b);

		void over();
		::Dynamic over_dyn();

};


#endif /* INCLUDED_EndGameSubState */ 
