// Generated by Haxe 3.3.0
#ifndef INCLUDED_openfl_filters_BitmapFilter
#define INCLUDED_openfl_filters_BitmapFilter

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS3(openfl,_internal,renderer,RenderSession)
HX_DECLARE_CLASS5(openfl,_internal,renderer,opengl,utils,RenderTexture)
HX_DECLARE_CLASS2(openfl,display,BitmapData)
HX_DECLARE_CLASS2(openfl,display,IBitmapDrawable)
HX_DECLARE_CLASS2(openfl,display,Shader)
HX_DECLARE_CLASS2(openfl,filters,BitmapFilter)
HX_DECLARE_CLASS2(openfl,geom,Matrix)
HX_DECLARE_CLASS2(openfl,geom,Point)
HX_DECLARE_CLASS2(openfl,geom,Rectangle)

namespace openfl{
namespace filters{


class HXCPP_CLASS_ATTRIBUTES BitmapFilter_obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef BitmapFilter_obj OBJ_;
		BitmapFilter_obj();

	public:
		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="openfl.filters.BitmapFilter")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,false,"openfl.filters.BitmapFilter"); }
		static hx::ObjectPtr< BitmapFilter_obj > __new();
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~BitmapFilter_obj();

		HX_DO_RTTI_ALL;
		hx::Val __Field(const ::String &inString, hx::PropertyAccess inCallProp);
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, hx::PropertyAccess inCallProp);
		hx::Val __SetField(const ::String &inString,const hx::Val &inValue, hx::PropertyAccess inCallProp);
		static bool __SetStatic(const ::String &inString, Dynamic &ioValue, hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		::String __ToString() const { return HX_HCSTRING("BitmapFilter","\x27","\x0d","\x67","\x58"); }

		static  ::openfl::_internal::renderer::opengl::utils::RenderTexture _hx___tmpRenderTexture;
		static void _hx___applyFilters(::Array< ::Dynamic> filters, ::openfl::_internal::renderer::RenderSession renderSession, ::openfl::display::BitmapData source, ::openfl::display::BitmapData target, ::openfl::geom::Rectangle sourceRect, ::openfl::geom::Point destPoint);
		static ::Dynamic _hx___applyFilters_dyn();

		static void _hx___expandBounds(::Array< ::Dynamic> filters, ::openfl::geom::Rectangle rect, ::openfl::geom::Matrix matrix);
		static ::Dynamic _hx___expandBounds_dyn();

		Bool _hx___dirty;
		Int _hx___passes;
		Bool _hx___saveLastFilter;
		virtual  ::openfl::filters::BitmapFilter clone();
		::Dynamic clone_dyn();

		virtual void _hx___growBounds( ::openfl::geom::Rectangle rect);
		::Dynamic _hx___growBounds_dyn();

		virtual  ::openfl::display::Shader _hx___preparePass(Int pass);
		::Dynamic _hx___preparePass_dyn();

		Bool _hx___useLastFilter(Int pass);
		::Dynamic _hx___useLastFilter_dyn();

};

} // end namespace openfl
} // end namespace filters

#endif /* INCLUDED_openfl_filters_BitmapFilter */ 
