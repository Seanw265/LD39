// Generated by Haxe 3.3.0
#include <hxcpp.h>

#ifndef INCLUDED_IntIterator
#include <IntIterator.h>
#endif
#ifndef INCLUDED_Reflect
#include <Reflect.h>
#endif
#ifndef INCLUDED_Std
#include <Std.h>
#endif
#ifndef INCLUDED_Type
#include <Type.h>
#endif
#ifndef INCLUDED_haxe_IMap
#include <haxe/IMap.h>
#endif
#ifndef INCLUDED_haxe_Log
#include <haxe/Log.h>
#endif
#ifndef INCLUDED_haxe_ds_BalancedTree
#include <haxe/ds/BalancedTree.h>
#endif
#ifndef INCLUDED_haxe_ds_EnumValueMap
#include <haxe/ds/EnumValueMap.h>
#endif
#ifndef INCLUDED_haxe_ds_IntMap
#include <haxe/ds/IntMap.h>
#endif
#ifndef INCLUDED_haxe_ds_ObjectMap
#include <haxe/ds/ObjectMap.h>
#endif
#ifndef INCLUDED_haxe_ds_StringMap
#include <haxe/ds/StringMap.h>
#endif
#ifndef INCLUDED_hscript_CType
#include <hscript/CType.h>
#endif
#ifndef INCLUDED_hscript_Const
#include <hscript/Const.h>
#endif
#ifndef INCLUDED_hscript_Error
#include <hscript/Error.h>
#endif
#ifndef INCLUDED_hscript_Expr
#include <hscript/Expr.h>
#endif
#ifndef INCLUDED_hscript_Interp
#include <hscript/Interp.h>
#endif
#ifndef INCLUDED_hscript__Interp_Stop
#include <hscript/_Interp/Stop.h>
#endif

namespace hscript{

void Interp_obj::__construct(){
            		HX_BEGIN_LOCAL_FUNC_S1(hx::LocalFunc,_hx_Closure_0, ::hscript::Interp,_gthis) HXARGC(1)
            		void _hx_run( ::Dynamic e){
            			HX_STACK_FRAME("hscript.Interp","new",0xf7e71101,"hscript.Interp.new","hscript/Interp.hx",67,0xf078416e)
            			HX_STACK_ARG(e,"e")
HXLINE(  67)			::String _hx_tmp = ::Std_obj::string(e);
HXDLIN(  67)			 ::Dynamic _hx_tmp1 = _gthis->posInfos();
HXDLIN(  67)			::haxe::Log_obj::trace(_hx_tmp,_hx_tmp1);
            		}
            		HX_END_LOCAL_FUNC1((void))

            	HX_STACK_FRAME("hscript.Interp","new",0xf7e71101,"hscript.Interp.new","hscript/Interp.hx",55,0xf078416e)
            	HX_STACK_THIS(this)
HXLINE(  55)		HX_VARI(  ::hscript::Interp,_gthis) = hx::ObjectPtr<OBJ_>(this);
HXLINE(  57)		this->variables =  ::haxe::ds::StringMap_obj::__new();
HXLINE(  58)		this->locals =  ::haxe::ds::StringMap_obj::__new();
HXLINE(  63)		this->declared = ::Array_obj< ::Dynamic>::__new();
HXLINE(  64)		this->variables->set(HX_("null",87,9e,0e,49),null());
HXLINE(  65)		this->variables->set(HX_("true",4e,a7,03,4d),true);
HXLINE(  66)		this->variables->set(HX_("false",a3,35,4f,fb),false);
HXLINE(  67)		this->variables->set(HX_("trace",85,8e,1f,16), ::Dynamic(new _hx_Closure_0(_gthis)));
HXLINE(  68)		this->initOps();
            	}

Dynamic Interp_obj::__CreateEmpty() { return new Interp_obj; }

hx::ObjectPtr< Interp_obj > Interp_obj::__new()
{
	hx::ObjectPtr< Interp_obj > _hx_result = new Interp_obj();
	_hx_result->__construct();
	return _hx_result;
}

Dynamic Interp_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< Interp_obj > _hx_result = new Interp_obj();
	_hx_result->__construct();
	return _hx_result;
}

 ::Dynamic Interp_obj::posInfos(){
            	HX_STACK_FRAME("hscript.Interp","posInfos",0x444859d0,"hscript.Interp.posInfos","hscript/Interp.hx",76,0xf078416e)
            	HX_STACK_THIS(this)
HXLINE(  76)		return  ::Dynamic(hx::Anon_obj::Create(2)
            			->setFixed(0,HX_("fileName",e7,5a,43,62),HX_("hscript",73,8c,18,2c))
            			->setFixed(1,HX_("lineNumber",dd,81,22,76),(int)0));
            	}


HX_DEFINE_DYNAMIC_FUNC0(Interp_obj,posInfos,return )

void Interp_obj::initOps(){
            		HX_BEGIN_LOCAL_FUNC_S1(hx::LocalFunc,_hx_Closure_0, ::hscript::Interp,me) HXARGC(2)
            		 ::Dynamic _hx_run(::hx::EnumBase e1,::hx::EnumBase e2){
            			HX_STACK_FRAME("hscript.Interp","initOps",0xe1420823,"hscript.Interp.initOps","hscript/Interp.hx",86,0xf078416e)
            			HX_STACK_ARG(e1,"e1")
            			HX_STACK_ARG(e2,"e2")
HXLINE(  86)			 ::Dynamic _hx_tmp = me->expr(e1);
HXDLIN(  86)			 ::Dynamic _hx_tmp1 = me->expr(e2);
HXDLIN(  86)			return (_hx_tmp + _hx_tmp1);
            		}
            		HX_END_LOCAL_FUNC2(return)

            		HX_BEGIN_LOCAL_FUNC_S1(hx::LocalFunc,_hx_Closure_1, ::hscript::Interp,me) HXARGC(2)
            		Float _hx_run(::hx::EnumBase e11,::hx::EnumBase e21){
            			HX_STACK_FRAME("hscript.Interp","initOps",0xe1420823,"hscript.Interp.initOps","hscript/Interp.hx",87,0xf078416e)
            			HX_STACK_ARG(e11,"e11")
            			HX_STACK_ARG(e21,"e21")
HXLINE(  87)			 ::Dynamic _hx_tmp2 = me->expr(e11);
HXDLIN(  87)			 ::Dynamic _hx_tmp3 = me->expr(e21);
HXDLIN(  87)			return (_hx_tmp2 - _hx_tmp3);
            		}
            		HX_END_LOCAL_FUNC2(return)

            		HX_BEGIN_LOCAL_FUNC_S1(hx::LocalFunc,_hx_Closure_2, ::hscript::Interp,me) HXARGC(2)
            		Float _hx_run(::hx::EnumBase e12,::hx::EnumBase e22){
            			HX_STACK_FRAME("hscript.Interp","initOps",0xe1420823,"hscript.Interp.initOps","hscript/Interp.hx",88,0xf078416e)
            			HX_STACK_ARG(e12,"e12")
            			HX_STACK_ARG(e22,"e22")
HXLINE(  88)			 ::Dynamic _hx_tmp4 = me->expr(e12);
HXDLIN(  88)			 ::Dynamic _hx_tmp5 = me->expr(e22);
HXDLIN(  88)			return (_hx_tmp4 * _hx_tmp5);
            		}
            		HX_END_LOCAL_FUNC2(return)

            		HX_BEGIN_LOCAL_FUNC_S1(hx::LocalFunc,_hx_Closure_3, ::hscript::Interp,me) HXARGC(2)
            		Float _hx_run(::hx::EnumBase e13,::hx::EnumBase e23){
            			HX_STACK_FRAME("hscript.Interp","initOps",0xe1420823,"hscript.Interp.initOps","hscript/Interp.hx",89,0xf078416e)
            			HX_STACK_ARG(e13,"e13")
            			HX_STACK_ARG(e23,"e23")
HXLINE(  89)			 ::Dynamic _hx_tmp6 = me->expr(e13);
HXDLIN(  89)			 ::Dynamic _hx_tmp7 = me->expr(e23);
HXDLIN(  89)			return ((Float)_hx_tmp6 / (Float)_hx_tmp7);
            		}
            		HX_END_LOCAL_FUNC2(return)

            		HX_BEGIN_LOCAL_FUNC_S1(hx::LocalFunc,_hx_Closure_4, ::hscript::Interp,me) HXARGC(2)
            		Float _hx_run(::hx::EnumBase e14,::hx::EnumBase e24){
            			HX_STACK_FRAME("hscript.Interp","initOps",0xe1420823,"hscript.Interp.initOps","hscript/Interp.hx",90,0xf078416e)
            			HX_STACK_ARG(e14,"e14")
            			HX_STACK_ARG(e24,"e24")
HXLINE(  90)			 ::Dynamic _hx_tmp8 = me->expr(e14);
HXDLIN(  90)			 ::Dynamic _hx_tmp9 = me->expr(e24);
HXDLIN(  90)			return hx::Mod(_hx_tmp8,_hx_tmp9);
            		}
            		HX_END_LOCAL_FUNC2(return)

            		HX_BEGIN_LOCAL_FUNC_S1(hx::LocalFunc,_hx_Closure_5, ::hscript::Interp,me) HXARGC(2)
            		Int _hx_run(::hx::EnumBase e15,::hx::EnumBase e25){
            			HX_STACK_FRAME("hscript.Interp","initOps",0xe1420823,"hscript.Interp.initOps","hscript/Interp.hx",91,0xf078416e)
            			HX_STACK_ARG(e15,"e15")
            			HX_STACK_ARG(e25,"e25")
HXLINE(  91)			 ::Dynamic _hx_tmp10 = me->expr(e15);
HXDLIN(  91)			 ::Dynamic _hx_tmp11 = me->expr(e25);
HXDLIN(  91)			return ((int)_hx_tmp10 & (int)_hx_tmp11);
            		}
            		HX_END_LOCAL_FUNC2(return)

            		HX_BEGIN_LOCAL_FUNC_S1(hx::LocalFunc,_hx_Closure_6, ::hscript::Interp,me) HXARGC(2)
            		Int _hx_run(::hx::EnumBase e16,::hx::EnumBase e26){
            			HX_STACK_FRAME("hscript.Interp","initOps",0xe1420823,"hscript.Interp.initOps","hscript/Interp.hx",92,0xf078416e)
            			HX_STACK_ARG(e16,"e16")
            			HX_STACK_ARG(e26,"e26")
HXLINE(  92)			 ::Dynamic _hx_tmp12 = me->expr(e16);
HXDLIN(  92)			 ::Dynamic _hx_tmp13 = me->expr(e26);
HXDLIN(  92)			return ((int)_hx_tmp12 | (int)_hx_tmp13);
            		}
            		HX_END_LOCAL_FUNC2(return)

            		HX_BEGIN_LOCAL_FUNC_S1(hx::LocalFunc,_hx_Closure_7, ::hscript::Interp,me) HXARGC(2)
            		Int _hx_run(::hx::EnumBase e17,::hx::EnumBase e27){
            			HX_STACK_FRAME("hscript.Interp","initOps",0xe1420823,"hscript.Interp.initOps","hscript/Interp.hx",93,0xf078416e)
            			HX_STACK_ARG(e17,"e17")
            			HX_STACK_ARG(e27,"e27")
HXLINE(  93)			 ::Dynamic _hx_tmp14 = me->expr(e17);
HXDLIN(  93)			 ::Dynamic _hx_tmp15 = me->expr(e27);
HXDLIN(  93)			return ((int)_hx_tmp14 ^ (int)_hx_tmp15);
            		}
            		HX_END_LOCAL_FUNC2(return)

            		HX_BEGIN_LOCAL_FUNC_S1(hx::LocalFunc,_hx_Closure_8, ::hscript::Interp,me) HXARGC(2)
            		Int _hx_run(::hx::EnumBase e18,::hx::EnumBase e28){
            			HX_STACK_FRAME("hscript.Interp","initOps",0xe1420823,"hscript.Interp.initOps","hscript/Interp.hx",94,0xf078416e)
            			HX_STACK_ARG(e18,"e18")
            			HX_STACK_ARG(e28,"e28")
HXLINE(  94)			 ::Dynamic _hx_tmp16 = me->expr(e18);
HXDLIN(  94)			 ::Dynamic _hx_tmp17 = me->expr(e28);
HXDLIN(  94)			return ((int)_hx_tmp16 << (int)_hx_tmp17);
            		}
            		HX_END_LOCAL_FUNC2(return)

            		HX_BEGIN_LOCAL_FUNC_S1(hx::LocalFunc,_hx_Closure_9, ::hscript::Interp,me) HXARGC(2)
            		Int _hx_run(::hx::EnumBase e19,::hx::EnumBase e29){
            			HX_STACK_FRAME("hscript.Interp","initOps",0xe1420823,"hscript.Interp.initOps","hscript/Interp.hx",95,0xf078416e)
            			HX_STACK_ARG(e19,"e19")
            			HX_STACK_ARG(e29,"e29")
HXLINE(  95)			 ::Dynamic _hx_tmp18 = me->expr(e19);
HXDLIN(  95)			 ::Dynamic _hx_tmp19 = me->expr(e29);
HXDLIN(  95)			return ((int)_hx_tmp18 >> (int)_hx_tmp19);
            		}
            		HX_END_LOCAL_FUNC2(return)

            		HX_BEGIN_LOCAL_FUNC_S1(hx::LocalFunc,_hx_Closure_10, ::hscript::Interp,me) HXARGC(2)
            		Int _hx_run(::hx::EnumBase e110,::hx::EnumBase e210){
            			HX_STACK_FRAME("hscript.Interp","initOps",0xe1420823,"hscript.Interp.initOps","hscript/Interp.hx",96,0xf078416e)
            			HX_STACK_ARG(e110,"e110")
            			HX_STACK_ARG(e210,"e210")
HXLINE(  96)			 ::Dynamic _hx_tmp20 = me->expr(e110);
HXDLIN(  96)			 ::Dynamic _hx_tmp21 = me->expr(e210);
HXDLIN(  96)			return hx::UShr(_hx_tmp20,_hx_tmp21);
            		}
            		HX_END_LOCAL_FUNC2(return)

            		HX_BEGIN_LOCAL_FUNC_S1(hx::LocalFunc,_hx_Closure_11, ::hscript::Interp,me) HXARGC(2)
            		Bool _hx_run(::hx::EnumBase e111,::hx::EnumBase e211){
            			HX_STACK_FRAME("hscript.Interp","initOps",0xe1420823,"hscript.Interp.initOps","hscript/Interp.hx",97,0xf078416e)
            			HX_STACK_ARG(e111,"e111")
            			HX_STACK_ARG(e211,"e211")
HXLINE(  97)			 ::Dynamic _hx_tmp22 = me->expr(e111);
HXDLIN(  97)			 ::Dynamic _hx_tmp23 = me->expr(e211);
HXDLIN(  97)			return hx::IsEq( _hx_tmp22,_hx_tmp23 );
            		}
            		HX_END_LOCAL_FUNC2(return)

            		HX_BEGIN_LOCAL_FUNC_S1(hx::LocalFunc,_hx_Closure_12, ::hscript::Interp,me) HXARGC(2)
            		Bool _hx_run(::hx::EnumBase e112,::hx::EnumBase e212){
            			HX_STACK_FRAME("hscript.Interp","initOps",0xe1420823,"hscript.Interp.initOps","hscript/Interp.hx",98,0xf078416e)
            			HX_STACK_ARG(e112,"e112")
            			HX_STACK_ARG(e212,"e212")
HXLINE(  98)			 ::Dynamic _hx_tmp24 = me->expr(e112);
HXDLIN(  98)			 ::Dynamic _hx_tmp25 = me->expr(e212);
HXDLIN(  98)			return hx::IsNotEq( _hx_tmp24,_hx_tmp25 );
            		}
            		HX_END_LOCAL_FUNC2(return)

            		HX_BEGIN_LOCAL_FUNC_S1(hx::LocalFunc,_hx_Closure_13, ::hscript::Interp,me) HXARGC(2)
            		Bool _hx_run(::hx::EnumBase e113,::hx::EnumBase e213){
            			HX_STACK_FRAME("hscript.Interp","initOps",0xe1420823,"hscript.Interp.initOps","hscript/Interp.hx",99,0xf078416e)
            			HX_STACK_ARG(e113,"e113")
            			HX_STACK_ARG(e213,"e213")
HXLINE(  99)			 ::Dynamic _hx_tmp26 = me->expr(e113);
HXDLIN(  99)			 ::Dynamic _hx_tmp27 = me->expr(e213);
HXDLIN(  99)			return hx::IsGreaterEq( _hx_tmp26,_hx_tmp27 );
            		}
            		HX_END_LOCAL_FUNC2(return)

            		HX_BEGIN_LOCAL_FUNC_S1(hx::LocalFunc,_hx_Closure_14, ::hscript::Interp,me) HXARGC(2)
            		Bool _hx_run(::hx::EnumBase e114,::hx::EnumBase e214){
            			HX_STACK_FRAME("hscript.Interp","initOps",0xe1420823,"hscript.Interp.initOps","hscript/Interp.hx",100,0xf078416e)
            			HX_STACK_ARG(e114,"e114")
            			HX_STACK_ARG(e214,"e214")
HXLINE( 100)			 ::Dynamic _hx_tmp28 = me->expr(e114);
HXDLIN( 100)			 ::Dynamic _hx_tmp29 = me->expr(e214);
HXDLIN( 100)			return hx::IsLessEq( _hx_tmp28,_hx_tmp29 );
            		}
            		HX_END_LOCAL_FUNC2(return)

            		HX_BEGIN_LOCAL_FUNC_S1(hx::LocalFunc,_hx_Closure_15, ::hscript::Interp,me) HXARGC(2)
            		Bool _hx_run(::hx::EnumBase e115,::hx::EnumBase e215){
            			HX_STACK_FRAME("hscript.Interp","initOps",0xe1420823,"hscript.Interp.initOps","hscript/Interp.hx",101,0xf078416e)
            			HX_STACK_ARG(e115,"e115")
            			HX_STACK_ARG(e215,"e215")
HXLINE( 101)			 ::Dynamic _hx_tmp30 = me->expr(e115);
HXDLIN( 101)			 ::Dynamic _hx_tmp31 = me->expr(e215);
HXDLIN( 101)			return hx::IsGreater( _hx_tmp30,_hx_tmp31 );
            		}
            		HX_END_LOCAL_FUNC2(return)

            		HX_BEGIN_LOCAL_FUNC_S1(hx::LocalFunc,_hx_Closure_16, ::hscript::Interp,me) HXARGC(2)
            		Bool _hx_run(::hx::EnumBase e116,::hx::EnumBase e216){
            			HX_STACK_FRAME("hscript.Interp","initOps",0xe1420823,"hscript.Interp.initOps","hscript/Interp.hx",102,0xf078416e)
            			HX_STACK_ARG(e116,"e116")
            			HX_STACK_ARG(e216,"e216")
HXLINE( 102)			 ::Dynamic _hx_tmp32 = me->expr(e116);
HXDLIN( 102)			 ::Dynamic _hx_tmp33 = me->expr(e216);
HXDLIN( 102)			return hx::IsLess( _hx_tmp32,_hx_tmp33 );
            		}
            		HX_END_LOCAL_FUNC2(return)

            		HX_BEGIN_LOCAL_FUNC_S1(hx::LocalFunc,_hx_Closure_17, ::hscript::Interp,me) HXARGC(2)
            		Bool _hx_run(::hx::EnumBase e117,::hx::EnumBase e217){
            			HX_STACK_FRAME("hscript.Interp","initOps",0xe1420823,"hscript.Interp.initOps","hscript/Interp.hx",103,0xf078416e)
            			HX_STACK_ARG(e117,"e117")
            			HX_STACK_ARG(e217,"e217")
HXLINE( 103)			 ::Dynamic _hx_tmp34 = me->expr(e117);
HXDLIN( 103)			if (hx::IsNotEq( _hx_tmp34,true )) {
HXLINE( 103)				 ::Dynamic _hx_tmp35 = me->expr(e217);
HXDLIN( 103)				return hx::IsEq( _hx_tmp35,true );
            			}
            			else {
HXLINE( 103)				return true;
            			}
HXDLIN( 103)			return false;
            		}
            		HX_END_LOCAL_FUNC2(return)

            		HX_BEGIN_LOCAL_FUNC_S1(hx::LocalFunc,_hx_Closure_18, ::hscript::Interp,me) HXARGC(2)
            		Bool _hx_run(::hx::EnumBase e118,::hx::EnumBase e218){
            			HX_STACK_FRAME("hscript.Interp","initOps",0xe1420823,"hscript.Interp.initOps","hscript/Interp.hx",104,0xf078416e)
            			HX_STACK_ARG(e118,"e118")
            			HX_STACK_ARG(e218,"e218")
HXLINE( 104)			 ::Dynamic _hx_tmp36 = me->expr(e118);
HXDLIN( 104)			if (hx::IsEq( _hx_tmp36,true )) {
HXLINE( 104)				 ::Dynamic _hx_tmp37 = me->expr(e218);
HXDLIN( 104)				return hx::IsEq( _hx_tmp37,true );
            			}
            			else {
HXLINE( 104)				return false;
            			}
HXDLIN( 104)			return false;
            		}
            		HX_END_LOCAL_FUNC2(return)

            		HX_BEGIN_LOCAL_FUNC_S1(hx::LocalFunc,_hx_Closure_19, ::hscript::Interp,me) HXARGC(2)
            		 ::IntIterator _hx_run(::hx::EnumBase e119,::hx::EnumBase e219){
            			HX_STACK_FRAME("hscript.Interp","initOps",0xe1420823,"hscript.Interp.initOps","hscript/Interp.hx",106,0xf078416e)
            			HX_STACK_ARG(e119,"e119")
            			HX_STACK_ARG(e219,"e219")
HXLINE( 106)			 ::Dynamic _hx_tmp38 = me->expr(e119);
HXDLIN( 106)			 ::Dynamic _hx_tmp39 = me->expr(e219);
HXDLIN( 106)			return  ::IntIterator_obj::__new(_hx_tmp38,_hx_tmp39);
            		}
            		HX_END_LOCAL_FUNC2(return)

            		HX_BEGIN_LOCAL_FUNC_S0(hx::LocalFunc,_hx_Closure_20) HXARGC(2)
            		 ::Dynamic _hx_run( ::Dynamic v1, ::Dynamic v2){
            			HX_STACK_FRAME("hscript.Interp","initOps",0xe1420823,"hscript.Interp.initOps","hscript/Interp.hx",107,0xf078416e)
            			HX_STACK_ARG(v1,"v1")
            			HX_STACK_ARG(v2,"v2")
HXLINE( 107)			return (v1 + v2);
            		}
            		HX_END_LOCAL_FUNC2(return)

            		HX_BEGIN_LOCAL_FUNC_S0(hx::LocalFunc,_hx_Closure_21) HXARGC(2)
            		Float _hx_run(Float v11,Float v21){
            			HX_STACK_FRAME("hscript.Interp","initOps",0xe1420823,"hscript.Interp.initOps","hscript/Interp.hx",108,0xf078416e)
            			HX_STACK_ARG(v11,"v11")
            			HX_STACK_ARG(v21,"v21")
HXLINE( 108)			return (v11 - v21);
            		}
            		HX_END_LOCAL_FUNC2(return)

            		HX_BEGIN_LOCAL_FUNC_S0(hx::LocalFunc,_hx_Closure_22) HXARGC(2)
            		Float _hx_run(Float v12,Float v22){
            			HX_STACK_FRAME("hscript.Interp","initOps",0xe1420823,"hscript.Interp.initOps","hscript/Interp.hx",109,0xf078416e)
            			HX_STACK_ARG(v12,"v12")
            			HX_STACK_ARG(v22,"v22")
HXLINE( 109)			return (v12 * v22);
            		}
            		HX_END_LOCAL_FUNC2(return)

            		HX_BEGIN_LOCAL_FUNC_S0(hx::LocalFunc,_hx_Closure_23) HXARGC(2)
            		Float _hx_run(Float v13,Float v23){
            			HX_STACK_FRAME("hscript.Interp","initOps",0xe1420823,"hscript.Interp.initOps","hscript/Interp.hx",110,0xf078416e)
            			HX_STACK_ARG(v13,"v13")
            			HX_STACK_ARG(v23,"v23")
HXLINE( 110)			return ((Float)v13 / (Float)v23);
            		}
            		HX_END_LOCAL_FUNC2(return)

            		HX_BEGIN_LOCAL_FUNC_S0(hx::LocalFunc,_hx_Closure_24) HXARGC(2)
            		Float _hx_run(Float v14,Float v24){
            			HX_STACK_FRAME("hscript.Interp","initOps",0xe1420823,"hscript.Interp.initOps","hscript/Interp.hx",111,0xf078416e)
            			HX_STACK_ARG(v14,"v14")
            			HX_STACK_ARG(v24,"v24")
HXLINE( 111)			return hx::Mod(v14,v24);
            		}
            		HX_END_LOCAL_FUNC2(return)

            		HX_BEGIN_LOCAL_FUNC_S0(hx::LocalFunc,_hx_Closure_25) HXARGC(2)
            		Int _hx_run(Int v15,Int v25){
            			HX_STACK_FRAME("hscript.Interp","initOps",0xe1420823,"hscript.Interp.initOps","hscript/Interp.hx",112,0xf078416e)
            			HX_STACK_ARG(v15,"v15")
            			HX_STACK_ARG(v25,"v25")
HXLINE( 112)			return ((int)v15 & (int)v25);
            		}
            		HX_END_LOCAL_FUNC2(return)

            		HX_BEGIN_LOCAL_FUNC_S0(hx::LocalFunc,_hx_Closure_26) HXARGC(2)
            		Int _hx_run(Int v16,Int v26){
            			HX_STACK_FRAME("hscript.Interp","initOps",0xe1420823,"hscript.Interp.initOps","hscript/Interp.hx",113,0xf078416e)
            			HX_STACK_ARG(v16,"v16")
            			HX_STACK_ARG(v26,"v26")
HXLINE( 113)			return ((int)v16 | (int)v26);
            		}
            		HX_END_LOCAL_FUNC2(return)

            		HX_BEGIN_LOCAL_FUNC_S0(hx::LocalFunc,_hx_Closure_27) HXARGC(2)
            		Int _hx_run(Int v17,Int v27){
            			HX_STACK_FRAME("hscript.Interp","initOps",0xe1420823,"hscript.Interp.initOps","hscript/Interp.hx",114,0xf078416e)
            			HX_STACK_ARG(v17,"v17")
            			HX_STACK_ARG(v27,"v27")
HXLINE( 114)			return ((int)v17 ^ (int)v27);
            		}
            		HX_END_LOCAL_FUNC2(return)

            		HX_BEGIN_LOCAL_FUNC_S0(hx::LocalFunc,_hx_Closure_28) HXARGC(2)
            		Int _hx_run(Int v18,Int v28){
            			HX_STACK_FRAME("hscript.Interp","initOps",0xe1420823,"hscript.Interp.initOps","hscript/Interp.hx",115,0xf078416e)
            			HX_STACK_ARG(v18,"v18")
            			HX_STACK_ARG(v28,"v28")
HXLINE( 115)			return ((int)v18 << (int)v28);
            		}
            		HX_END_LOCAL_FUNC2(return)

            		HX_BEGIN_LOCAL_FUNC_S0(hx::LocalFunc,_hx_Closure_29) HXARGC(2)
            		Int _hx_run(Int v19,Int v29){
            			HX_STACK_FRAME("hscript.Interp","initOps",0xe1420823,"hscript.Interp.initOps","hscript/Interp.hx",116,0xf078416e)
            			HX_STACK_ARG(v19,"v19")
            			HX_STACK_ARG(v29,"v29")
HXLINE( 116)			return ((int)v19 >> (int)v29);
            		}
            		HX_END_LOCAL_FUNC2(return)

            		HX_BEGIN_LOCAL_FUNC_S0(hx::LocalFunc,_hx_Closure_30) HXARGC(2)
            		Int _hx_run(Int v110,Int v210){
            			HX_STACK_FRAME("hscript.Interp","initOps",0xe1420823,"hscript.Interp.initOps","hscript/Interp.hx",117,0xf078416e)
            			HX_STACK_ARG(v110,"v110")
            			HX_STACK_ARG(v210,"v210")
HXLINE( 117)			return hx::UShr(v110,v210);
            		}
            		HX_END_LOCAL_FUNC2(return)

            	HX_STACK_FRAME("hscript.Interp","initOps",0xe1420823,"hscript.Interp.initOps","hscript/Interp.hx",79,0xf078416e)
            	HX_STACK_THIS(this)
HXLINE(  80)		HX_VARI(  ::hscript::Interp,me) = hx::ObjectPtr<OBJ_>(this);
HXLINE(  82)		this->binops =  ::haxe::ds::StringMap_obj::__new();
HXLINE(  86)		this->binops->set(HX_("+",2b,00,00,00), ::Dynamic(new _hx_Closure_0(me)));
HXLINE(  87)		this->binops->set(HX_("-",2d,00,00,00), ::Dynamic(new _hx_Closure_1(me)));
HXLINE(  88)		this->binops->set(HX_("*",2a,00,00,00), ::Dynamic(new _hx_Closure_2(me)));
HXLINE(  89)		this->binops->set(HX_("/",2f,00,00,00), ::Dynamic(new _hx_Closure_3(me)));
HXLINE(  90)		this->binops->set(HX_("%",25,00,00,00), ::Dynamic(new _hx_Closure_4(me)));
HXLINE(  91)		this->binops->set(HX_("&",26,00,00,00), ::Dynamic(new _hx_Closure_5(me)));
HXLINE(  92)		this->binops->set(HX_("|",7c,00,00,00), ::Dynamic(new _hx_Closure_6(me)));
HXLINE(  93)		this->binops->set(HX_("^",5e,00,00,00), ::Dynamic(new _hx_Closure_7(me)));
HXLINE(  94)		this->binops->set(HX_("<<",80,34,00,00), ::Dynamic(new _hx_Closure_8(me)));
HXLINE(  95)		this->binops->set(HX_(">>",40,36,00,00), ::Dynamic(new _hx_Closure_9(me)));
HXLINE(  96)		this->binops->set(HX_(">>>",fe,41,2f,00), ::Dynamic(new _hx_Closure_10(me)));
HXLINE(  97)		this->binops->set(HX_("==",60,35,00,00), ::Dynamic(new _hx_Closure_11(me)));
HXLINE(  98)		this->binops->set(HX_("!=",fc,1c,00,00), ::Dynamic(new _hx_Closure_12(me)));
HXLINE(  99)		this->binops->set(HX_(">=",3f,36,00,00), ::Dynamic(new _hx_Closure_13(me)));
HXLINE( 100)		this->binops->set(HX_("<=",81,34,00,00), ::Dynamic(new _hx_Closure_14(me)));
HXLINE( 101)		this->binops->set(HX_(">",3e,00,00,00), ::Dynamic(new _hx_Closure_15(me)));
HXLINE( 102)		this->binops->set(HX_("<",3c,00,00,00), ::Dynamic(new _hx_Closure_16(me)));
HXLINE( 103)		this->binops->set(HX_("||",80,6c,00,00), ::Dynamic(new _hx_Closure_17(me)));
HXLINE( 104)		this->binops->set(HX_("&&",40,21,00,00), ::Dynamic(new _hx_Closure_18(me)));
HXLINE( 105)		this->binops->set(HX_("=",3d,00,00,00),this->assign_dyn());
HXLINE( 106)		this->binops->set(HX_("...",ee,0f,23,00), ::Dynamic(new _hx_Closure_19(me)));
HXLINE( 107)		this->assignOp(HX_("+=",b2,25,00,00), ::Dynamic(new _hx_Closure_20()));
HXLINE( 108)		this->assignOp(HX_("-=",70,27,00,00), ::Dynamic(new _hx_Closure_21()));
HXLINE( 109)		this->assignOp(HX_("*=",d3,24,00,00), ::Dynamic(new _hx_Closure_22()));
HXLINE( 110)		this->assignOp(HX_("/=",2e,29,00,00), ::Dynamic(new _hx_Closure_23()));
HXLINE( 111)		this->assignOp(HX_("%=",78,20,00,00), ::Dynamic(new _hx_Closure_24()));
HXLINE( 112)		this->assignOp(HX_("&=",57,21,00,00), ::Dynamic(new _hx_Closure_25()));
HXLINE( 113)		this->assignOp(HX_("|=",41,6c,00,00), ::Dynamic(new _hx_Closure_26()));
HXLINE( 114)		this->assignOp(HX_("^=",1f,52,00,00), ::Dynamic(new _hx_Closure_27()));
HXLINE( 115)		this->assignOp(HX_("<<=",bd,bb,2d,00), ::Dynamic(new _hx_Closure_28()));
HXLINE( 116)		this->assignOp(HX_(">>=",fd,41,2f,00), ::Dynamic(new _hx_Closure_29()));
HXLINE( 117)		this->assignOp(HX_(">>>=",7f,7c,2a,29), ::Dynamic(new _hx_Closure_30()));
            	}


HX_DEFINE_DYNAMIC_FUNC0(Interp_obj,initOps,(void))

 ::Dynamic Interp_obj::assign(::hx::EnumBase e1,::hx::EnumBase e2){
            	HX_STACK_FRAME("hscript.Interp","assign",0xca66602e,"hscript.Interp.assign","hscript/Interp.hx",120,0xf078416e)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(e1,"e1")
            	HX_STACK_ARG(e2,"e2")
HXLINE( 121)		HX_VARI(  ::Dynamic,v) = this->expr(e2);
HXLINE( 122)		Int _hx_tmp = ( ( ::hx::EnumBase)(e1) )->_hx_getIndex();
HXDLIN( 122)		switch((int)(_hx_tmp)){
            			case (int)1: {
HXLINE( 123)				HX_VARI( ::String,id) = e1->_hx_getString(0);
HXDLIN( 123)				{
HXLINE( 124)					HX_VARI(  ::Dynamic,l) = this->locals->get(id);
HXLINE( 125)					Bool _hx_tmp1 = hx::IsNull( l );
HXDLIN( 125)					if (_hx_tmp1) {
HXLINE( 126)						this->variables->set(id,v);
            					}
            					else {
HXLINE( 128)						l->__SetField(HX_("r",72,00,00,00),v,hx::paccDynamic);
            					}
            				}
            			}
            			break;
            			case (int)5: {
HXLINE( 129)				HX_VARI( ::String,f) = e1->_hx_getString(1);
HXLINE( 130)				 ::Dynamic _hx_tmp2 = this->expr(e1->_hx_getObject(0).StaticCast< ::hx::EnumBase >());
HXDLIN( 130)				v = this->set(_hx_tmp2,f,v);
            			}
            			break;
            			case (int)16: {
HXLINE( 132)				HX_VARI(  ::Dynamic,arr) = this->expr(e1->_hx_getObject(0).StaticCast< ::hx::EnumBase >());
HXLINE( 133)				HX_VARI(  ::Dynamic,index) = this->expr(e1->_hx_getObject(1).StaticCast< ::hx::EnumBase >());
HXLINE( 134)				Bool _hx_tmp3 = ::Std_obj::is(arr,hx::ClassOf< ::haxe::IMap >());
HXDLIN( 134)				if (_hx_tmp3) {
HXLINE( 135)					::haxe::IMap_obj::set(arr,index,v);
            				}
            				else {
HXLINE( 138)					arr->__SetItem(( (Int)(index) ),v);
            				}
            			}
            			break;
            			default:{
HXLINE( 142)				::hx::EnumBase e = ::hscript::Error_obj::EInvalidOp(HX_("=",3d,00,00,00));
HXDLIN( 142)				HX_STACK_DO_THROW(e);
            			}
            		}
HXLINE( 144)		return v;
            	}


HX_DEFINE_DYNAMIC_FUNC2(Interp_obj,assign,return )

void Interp_obj::assignOp(::String op, ::Dynamic fop){
            		HX_BEGIN_LOCAL_FUNC_S3(hx::LocalFunc,_hx_Closure_0,::String,op, ::hscript::Interp,me, ::Dynamic,fop) HXARGC(2)
            		 ::Dynamic _hx_run(::hx::EnumBase e1,::hx::EnumBase e2){
            			HX_STACK_FRAME("hscript.Interp","assignOp",0xf8e18cef,"hscript.Interp.assignOp","hscript/Interp.hx",149,0xf078416e)
            			HX_STACK_ARG(e1,"e1")
            			HX_STACK_ARG(e2,"e2")
HXLINE( 149)			return me->evalAssignOp(op,fop,e1,e2);
            		}
            		HX_END_LOCAL_FUNC2(return)

            	HX_STACK_FRAME("hscript.Interp","assignOp",0xf8e18cef,"hscript.Interp.assignOp","hscript/Interp.hx",147,0xf078416e)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(op,"op")
            	HX_STACK_ARG(fop,"fop")
HXLINE( 148)		HX_VARI(  ::hscript::Interp,me) = hx::ObjectPtr<OBJ_>(this);
HXLINE( 149)		this->binops->set(op, ::Dynamic(new _hx_Closure_0(op,me,fop)));
            	}


HX_DEFINE_DYNAMIC_FUNC2(Interp_obj,assignOp,(void))

 ::Dynamic Interp_obj::evalAssignOp(::String op, ::Dynamic fop,::hx::EnumBase e1,::hx::EnumBase e2){
            	HX_STACK_FRAME("hscript.Interp","evalAssignOp",0xa46efc2b,"hscript.Interp.evalAssignOp","hscript/Interp.hx",152,0xf078416e)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(op,"op")
            	HX_STACK_ARG(fop,"fop")
            	HX_STACK_ARG(e1,"e1")
            	HX_STACK_ARG(e2,"e2")
HXLINE( 153)		HX_VAR(  ::Dynamic,v);
HXLINE( 154)		Int _hx_tmp = ( ( ::hx::EnumBase)(e1) )->_hx_getIndex();
HXDLIN( 154)		switch((int)(_hx_tmp)){
            			case (int)1: {
HXLINE( 155)				HX_VARI( ::String,id) = e1->_hx_getString(0);
HXDLIN( 155)				{
HXLINE( 156)					HX_VARI(  ::Dynamic,l) = this->locals->get(id);
HXLINE( 157)					 ::Dynamic _hx_tmp1 = this->expr(e1);
HXDLIN( 157)					 ::Dynamic _hx_tmp2 = this->expr(e2);
HXDLIN( 157)					v = fop(_hx_tmp1,_hx_tmp2);
HXLINE( 158)					Bool _hx_tmp3 = hx::IsNull( l );
HXDLIN( 158)					if (_hx_tmp3) {
HXLINE( 159)						this->variables->set(id,v);
            					}
            					else {
HXLINE( 161)						l->__SetField(HX_("r",72,00,00,00),v,hx::paccDynamic);
            					}
            				}
            			}
            			break;
            			case (int)5: {
HXLINE( 162)				HX_VARI( ::String,f) = e1->_hx_getString(1);
HXDLIN( 162)				{
HXLINE( 163)					HX_VARI(  ::Dynamic,obj) = this->expr(e1->_hx_getObject(0).StaticCast< ::hx::EnumBase >());
HXLINE( 164)					 ::Dynamic _hx_tmp4 = this->get(obj,f);
HXDLIN( 164)					 ::Dynamic _hx_tmp5 = this->expr(e2);
HXDLIN( 164)					v = fop(_hx_tmp4,_hx_tmp5);
HXLINE( 165)					v = this->set(obj,f,v);
            				}
            			}
            			break;
            			case (int)16: {
HXLINE( 167)				HX_VARI(  ::Dynamic,arr) = this->expr(e1->_hx_getObject(0).StaticCast< ::hx::EnumBase >());
HXLINE( 168)				HX_VARI(  ::Dynamic,index) = this->expr(e1->_hx_getObject(1).StaticCast< ::hx::EnumBase >());
HXLINE( 169)				Bool _hx_tmp6 = ::Std_obj::is(arr,hx::ClassOf< ::haxe::IMap >());
HXDLIN( 169)				if (_hx_tmp6) {
HXLINE( 170)					 ::Dynamic _hx_tmp7 = ::haxe::IMap_obj::get(arr,index);
HXDLIN( 170)					 ::Dynamic _hx_tmp8 = this->expr(e2);
HXDLIN( 170)					v = fop(_hx_tmp7,_hx_tmp8);
HXLINE( 171)					::haxe::IMap_obj::set(arr,index,v);
            				}
            				else {
HXLINE( 174)					 ::Dynamic _hx_tmp9 = arr->__GetItem(( (Int)(index) ));
HXDLIN( 174)					 ::Dynamic _hx_tmp10 = this->expr(e2);
HXDLIN( 174)					v = fop(_hx_tmp9,_hx_tmp10);
HXLINE( 175)					arr->__SetItem(( (Int)(index) ),v);
            				}
            			}
            			break;
            			default:{
HXLINE( 178)				::hx::EnumBase e = ::hscript::Error_obj::EInvalidOp(op);
HXDLIN( 178)				HX_STACK_DO_THROW(e);
            			}
            		}
HXLINE( 180)		return v;
            	}


HX_DEFINE_DYNAMIC_FUNC4(Interp_obj,evalAssignOp,return )

 ::Dynamic Interp_obj::increment(::hx::EnumBase e,Bool prefix,Int delta){
            	HX_STACK_FRAME("hscript.Interp","increment",0x1e81f590,"hscript.Interp.increment","hscript/Interp.hx",188,0xf078416e)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(e,"e")
            	HX_STACK_ARG(prefix,"prefix")
            	HX_STACK_ARG(delta,"delta")
HXLINE( 188)		Int _hx_tmp = ( ( ::hx::EnumBase)(e) )->_hx_getIndex();
HXDLIN( 188)		switch((int)(_hx_tmp)){
            			case (int)1: {
HXLINE( 189)				HX_VARI( ::String,id) = e->_hx_getString(0);
HXLINE( 190)				HX_VARI(  ::Dynamic,l) = this->locals->get(id);
HXLINE( 191)				HX_VAR(  ::Dynamic,v);
HXDLIN( 191)				Bool _hx_tmp1 = hx::IsNull( l );
HXDLIN( 191)				if (_hx_tmp1) {
HXLINE( 191)					v = this->variables->get(id);
            				}
            				else {
HXLINE( 191)					v =  ::Dynamic(l->__Field(HX_("r",72,00,00,00),hx::paccDynamic));
            				}
HXLINE( 192)				if (prefix) {
HXLINE( 193)					hx::AddEq(v,delta);
HXLINE( 194)					Bool _hx_tmp2 = hx::IsNull( l );
HXDLIN( 194)					if (_hx_tmp2) {
HXLINE( 194)						this->variables->set(id,v);
            					}
            					else {
HXLINE( 194)						l->__SetField(HX_("r",72,00,00,00),v,hx::paccDynamic);
            					}
            				}
            				else {
HXLINE( 196)					Bool _hx_tmp3 = hx::IsNull( l );
HXDLIN( 196)					if (_hx_tmp3) {
HXLINE( 196)						this->variables->set(id,(v + delta));
            					}
            					else {
HXLINE( 196)						l->__SetField(HX_("r",72,00,00,00),(v + delta),hx::paccDynamic);
            					}
            				}
HXLINE( 197)				return v;
            			}
            			break;
            			case (int)5: {
HXLINE( 198)				HX_VARI( ::String,f) = e->_hx_getString(1);
HXLINE( 199)				HX_VARI(  ::Dynamic,obj) = this->expr(e->_hx_getObject(0).StaticCast< ::hx::EnumBase >());
HXLINE( 200)				HX_VARI_NAME(  ::Dynamic,v1,"v") = this->get(obj,f);
HXLINE( 201)				if (prefix) {
HXLINE( 202)					hx::AddEq(v1,delta);
HXLINE( 203)					this->set(obj,f,v1);
            				}
            				else {
HXLINE( 205)					this->set(obj,f,(v1 + delta));
            				}
HXLINE( 206)				return v1;
            			}
            			break;
            			case (int)16: {
HXLINE( 207)				HX_VARI( ::hx::EnumBase,index) = e->_hx_getObject(1).StaticCast< ::hx::EnumBase >();
HXLINE( 208)				HX_VARI(  ::Dynamic,arr) = this->expr(e->_hx_getObject(0).StaticCast< ::hx::EnumBase >());
HXLINE( 209)				HX_VARI_NAME(  ::Dynamic,index1,"index") = this->expr(index);
HXLINE( 210)				Bool _hx_tmp4 = ::Std_obj::is(arr,hx::ClassOf< ::haxe::IMap >());
HXDLIN( 210)				if (_hx_tmp4) {
HXLINE( 211)					HX_VARI_NAME( Int,v2,"v") = ( (Int)(::haxe::IMap_obj::get(arr,index1)) );
HXLINE( 212)					if (prefix) {
HXLINE( 213)						hx::AddEq(v2,delta);
HXLINE( 214)						::haxe::IMap_obj::set(arr,index1,v2);
            					}
            					else {
HXLINE( 217)						::haxe::IMap_obj::set(arr,index1,(v2 + delta));
            					}
HXLINE( 219)					return v2;
            				}
            				else {
HXLINE( 222)					HX_VARI_NAME( Int,v3,"v") = ( (Int)(arr->__GetItem(( (Int)(index1) ))) );
HXLINE( 223)					if (prefix) {
HXLINE( 224)						hx::AddEq(v3,delta);
HXLINE( 225)						arr->__SetItem(( (Int)(index1) ),v3);
            					}
            					else {
HXLINE( 227)						arr->__SetItem(( (Int)(index1) ),(v3 + delta));
            					}
HXLINE( 228)					return v3;
            				}
            			}
            			break;
            			default:{
HXLINE( 231)				::String _hx_tmp5;
HXDLIN( 231)				if ((delta > (int)0)) {
HXLINE( 231)					_hx_tmp5 = HX_("++",a0,25,00,00);
            				}
            				else {
HXLINE( 231)					_hx_tmp5 = HX_("--",60,27,00,00);
            				}
HXDLIN( 231)				::hx::EnumBase e1 = ::hscript::Error_obj::EInvalidOp(_hx_tmp5);
HXDLIN( 231)				HX_STACK_DO_THROW(e1);
            			}
            		}
HXLINE( 188)		return null();
            	}


HX_DEFINE_DYNAMIC_FUNC3(Interp_obj,increment,return )

 ::Dynamic Interp_obj::execute(::hx::EnumBase expr){
            	HX_STACK_FRAME("hscript.Interp","execute",0xe1c3af56,"hscript.Interp.execute","hscript/Interp.hx",235,0xf078416e)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(expr,"expr")
HXLINE( 236)		this->depth = (int)0;
HXLINE( 238)		this->locals =  ::haxe::ds::StringMap_obj::__new();
HXLINE( 242)		this->declared = ::Array_obj< ::Dynamic>::__new();
HXLINE( 243)		return this->exprReturn(expr);
            	}


HX_DEFINE_DYNAMIC_FUNC1(Interp_obj,execute,return )

 ::Dynamic Interp_obj::exprReturn(::hx::EnumBase e){
            	HX_STACK_FRAME("hscript.Interp","exprReturn",0x8cfbf144,"hscript.Interp.exprReturn","hscript/Interp.hx",247,0xf078416e)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(e,"e")
HXLINE( 247)		try {
            			HX_STACK_CATCHABLE(::hx::EnumBase, 0);
HXLINE( 248)			return this->expr(e);
            		}
            		catch( ::Dynamic _hx_e){
            			if (_hx_e.IsClass< ::hx::EnumBase >() ){
            				HX_STACK_BEGIN_CATCH
            				::hx::EnumBase e1 = _hx_e;
HXLINE( 250)				Int _hx_tmp = ( ( ::hx::EnumBase)(e1) )->_hx_getIndex();
HXDLIN( 250)				switch((int)(_hx_tmp)){
            					case (int)0: {
HXLINE( 251)						HX_STACK_DO_THROW(HX_("Invalid break",b6,ee,24,9d));
            					}
            					break;
            					case (int)1: {
HXLINE( 252)						HX_STACK_DO_THROW(HX_("Invalid continue",d0,6a,b7,3f));
            					}
            					break;
            					case (int)2: {
HXLINE( 253)						return e1->_hx_getObject(0);
            					}
            					break;
            				}
            			}
            			else {
            				HX_STACK_DO_THROW(_hx_e);
            			}
            		}
HXLINE( 247)		return null();
            	}


HX_DEFINE_DYNAMIC_FUNC1(Interp_obj,exprReturn,return )

 ::haxe::ds::StringMap Interp_obj::duplicate( ::haxe::ds::StringMap h){
            	HX_STACK_FRAME("hscript.Interp","duplicate",0x8d9a10ec,"hscript.Interp.duplicate","hscript/Interp.hx",259,0xf078416e)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(h,"h")
HXLINE( 261)		HX_VARI(  ::haxe::ds::StringMap,h2) =  ::haxe::ds::StringMap_obj::__new();
HXLINE( 265)		{
HXLINE( 265)			HX_VARI(  ::Dynamic,tmp) = h->keys();
HXDLIN( 265)			while(true){
HXLINE( 265)				Bool _hx_tmp = !(( (Bool)( ::Dynamic(tmp->__Field(HX_("hasNext",6d,a5,46,18),hx::paccDynamic))()) ));
HXDLIN( 265)				if (_hx_tmp) {
HXLINE( 265)					goto _hx_goto_0;
            				}
HXDLIN( 265)				HX_VARI( ::String,k) = ( (::String)( ::Dynamic(tmp->__Field(HX_("next",f3,84,02,49),hx::paccDynamic))()) );
HXLINE( 266)				 ::Dynamic value = h->get(k);
HXDLIN( 266)				h2->set(k,value);
            			}
            			_hx_goto_0:;
            		}
HXLINE( 267)		return h2;
            	}


HX_DEFINE_DYNAMIC_FUNC1(Interp_obj,duplicate,return )

void Interp_obj::restore(Int old){
            	HX_STACK_FRAME("hscript.Interp","restore",0x80670c6f,"hscript.Interp.restore","hscript/Interp.hx",271,0xf078416e)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(old,"old")
HXLINE( 271)		while((this->declared->length > old)){
HXLINE( 272)			HX_VARI(  ::Dynamic,d) = this->declared->pop();
HXLINE( 273)			this->locals->set( ::Dynamic(d->__Field(HX_("n",6e,00,00,00),hx::paccDynamic)), ::Dynamic(d->__Field(HX_("old",a7,98,54,00),hx::paccDynamic)));
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC1(Interp_obj,restore,(void))

::hx::EnumBase Interp_obj::edef(::hx::EnumBase e){
            	HX_STACK_FRAME("hscript.Interp","edef",0xec5412bf,"hscript.Interp.edef","hscript/Interp.hx",281,0xf078416e)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(e,"e")
HXLINE( 281)		return e;
            	}


HX_DEFINE_DYNAMIC_FUNC1(Interp_obj,edef,return )

 ::Dynamic Interp_obj::error(::hx::EnumBase e){
            	HX_STACK_FRAME("hscript.Interp","error",0xe68736a9,"hscript.Interp.error","hscript/Interp.hx",289,0xf078416e)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(e,"e")
HXLINE( 289)		HX_STACK_DO_THROW(e);
HXDLIN( 289)		return null();
            	}


HX_DEFINE_DYNAMIC_FUNC1(Interp_obj,error,return )

 ::Dynamic Interp_obj::resolve(::String id){
            	HX_STACK_FRAME("hscript.Interp","resolve",0x7d16b80d,"hscript.Interp.resolve","hscript/Interp.hx",294,0xf078416e)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(id,"id")
HXLINE( 295)		HX_VARI(  ::Dynamic,l) = this->locals->get(id);
HXLINE( 296)		Bool _hx_tmp = hx::IsNotNull( l );
HXDLIN( 296)		if (_hx_tmp) {
HXLINE( 297)			return  ::Dynamic(l->__Field(HX_("r",72,00,00,00),hx::paccDynamic));
            		}
HXLINE( 298)		HX_VARI(  ::Dynamic,v) = this->variables->get(id);
HXLINE( 299)		Bool _hx_tmp1;
HXDLIN( 299)		Bool _hx_tmp2 = hx::IsNull( v );
HXDLIN( 299)		if (_hx_tmp2) {
HXLINE( 299)			_hx_tmp1 = !(this->variables->exists(id));
            		}
            		else {
HXLINE( 299)			_hx_tmp1 = false;
            		}
HXDLIN( 299)		if (_hx_tmp1) {
HXLINE( 300)			::hx::EnumBase e = ::hscript::Error_obj::EUnknownVariable(id);
HXDLIN( 300)			HX_STACK_DO_THROW(e);
            		}
HXLINE( 301)		return v;
            	}


HX_DEFINE_DYNAMIC_FUNC1(Interp_obj,resolve,return )

 ::Dynamic Interp_obj::expr(::hx::EnumBase e){
            	HX_STACK_FRAME("hscript.Interp","expr",0xec634974,"hscript.Interp.expr","hscript/Interp.hx",304,0xf078416e)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(e,"e")
HXLINE( 304)		HX_VARI(  ::hscript::Interp,_gthis) = hx::ObjectPtr<OBJ_>(this);
HXLINE( 309)		Int _hx_tmp = ( ( ::hx::EnumBase)(e) )->_hx_getIndex();
HXDLIN( 309)		switch((int)(_hx_tmp)){
            			case (int)0: {
HXLINE( 310)				HX_VARI( ::hx::EnumBase,c) = e->_hx_getObject(0).StaticCast< ::hx::EnumBase >();
HXLINE( 311)				Int _hx_tmp1 = ( ( ::hx::EnumBase)(c) )->_hx_getIndex();
HXDLIN( 311)				switch((int)(_hx_tmp1)){
            					case (int)0: {
HXLINE( 312)						return c->_hx_getInt(0);
            					}
            					break;
            					case (int)1: {
HXLINE( 313)						return c->_hx_getFloat(0);
            					}
            					break;
            					case (int)2: {
HXLINE( 314)						return c->_hx_getString(0);
            					}
            					break;
            				}
            			}
            			break;
            			case (int)1: {
HXLINE( 320)				return this->resolve(e->_hx_getString(0));
            			}
            			break;
            			case (int)2: {
HXLINE( 321)				HX_VARI_NAME( ::hx::EnumBase,e1,"e") = e->_hx_getObject(2).StaticCast< ::hx::EnumBase >();
HXDLIN( 321)				HX_VARI( ::String,n) = e->_hx_getString(0);
HXLINE( 322)				this->declared->push( ::Dynamic(hx::Anon_obj::Create(2)
            					->setFixed(0,HX_("n",6e,00,00,00),n)
            					->setFixed(1,HX_("old",a7,98,54,00),this->locals->get(n))));
HXLINE( 323)				{
HXLINE( 323)					 ::Dynamic _hx_tmp2;
HXDLIN( 323)					Bool _hx_tmp3 = hx::IsNull( e1 );
HXDLIN( 323)					if (_hx_tmp3) {
HXLINE( 323)						_hx_tmp2 = null();
            					}
            					else {
HXLINE( 323)						_hx_tmp2 = this->expr(e1);
            					}
HXDLIN( 323)					this->locals->set(n, ::Dynamic(hx::Anon_obj::Create(1)
            						->setFixed(0,HX_("r",72,00,00,00),_hx_tmp2)));
            				}
HXLINE( 324)				return null();
            			}
            			break;
            			case (int)3: {
HXLINE( 326)				return this->expr(e->_hx_getObject(0).StaticCast< ::hx::EnumBase >());
            			}
            			break;
            			case (int)4: {
HXLINE( 327)				HX_VARI( ::Array< ::Dynamic>,exprs) = e->_hx_getObject(0).StaticCast< ::Array< ::Dynamic> >();
HXLINE( 328)				HX_VARI( Int,old) = this->declared->length;
HXLINE( 329)				HX_VARI(  ::Dynamic,v) = null();
HXLINE( 330)				{
HXLINE( 330)					HX_VARI( Int,_g) = (int)0;
HXDLIN( 330)					while((_g < exprs->length)){
HXLINE( 330)						HX_VARI_NAME( ::hx::EnumBase,e2,"e") = exprs->__get(_g).StaticCast< ::hx::EnumBase >();
HXDLIN( 330)						++_g;
HXLINE( 331)						v = this->expr(e2);
            					}
            				}
HXLINE( 332)				this->restore(old);
HXLINE( 333)				return v;
            			}
            			break;
            			case (int)5: {
HXLINE( 334)				HX_VARI( ::String,f) = e->_hx_getString(1);
HXLINE( 335)				 ::Dynamic _hx_tmp4 = this->expr(e->_hx_getObject(0).StaticCast< ::hx::EnumBase >());
HXDLIN( 335)				return this->get(_hx_tmp4,f);
            			}
            			break;
            			case (int)6: {
HXLINE( 336)				HX_VARI_NAME( ::hx::EnumBase,e21,"e2") = e->_hx_getObject(2).StaticCast< ::hx::EnumBase >();
HXDLIN( 336)				HX_VARI_NAME( ::hx::EnumBase,e11,"e1") = e->_hx_getObject(1).StaticCast< ::hx::EnumBase >();
HXDLIN( 336)				HX_VARI( ::String,op) = e->_hx_getString(0);
HXLINE( 337)				HX_VARI(  ::Dynamic,fop) = this->binops->get(op);
HXLINE( 338)				Bool _hx_tmp5 = hx::IsNull( fop );
HXDLIN( 338)				if (_hx_tmp5) {
HXLINE( 338)					::hx::EnumBase e3 = ::hscript::Error_obj::EInvalidOp(op);
HXDLIN( 338)					HX_STACK_DO_THROW(e3);
            				}
HXLINE( 339)				return fop(e11,e21);
            			}
            			break;
            			case (int)7: {
HXLINE( 340)				HX_VARI_NAME( ::hx::EnumBase,e4,"e") = e->_hx_getObject(2).StaticCast< ::hx::EnumBase >();
HXDLIN( 340)				HX_VARI( Bool,prefix) = e->_hx_getBool(1);
HXDLIN( 340)				HX_VARI_NAME( ::String,op1,"op") = e->_hx_getString(0);
HXLINE( 341)				::String _hx_switch_0 = op1;
            				if (  (_hx_switch_0==HX_("!",21,00,00,00)) ){
HXLINE( 343)					 ::Dynamic _hx_tmp6 = this->expr(e4);
HXDLIN( 343)					return hx::IsNotEq( _hx_tmp6,true );
HXDLIN( 343)					goto _hx_goto_3;
            				}
            				if (  (_hx_switch_0==HX_("++",a0,25,00,00)) ){
HXLINE( 347)					return this->increment(e4,prefix,(int)1);
HXDLIN( 347)					goto _hx_goto_3;
            				}
            				if (  (_hx_switch_0==HX_("-",2d,00,00,00)) ){
HXLINE( 345)					return -(this->expr(e4));
HXDLIN( 345)					goto _hx_goto_3;
            				}
            				if (  (_hx_switch_0==HX_("--",60,27,00,00)) ){
HXLINE( 349)					return this->increment(e4,prefix,(int)-1);
HXDLIN( 349)					goto _hx_goto_3;
            				}
            				if (  (_hx_switch_0==HX_("~",7e,00,00,00)) ){
HXLINE( 354)					return ~(( (Int)(this->expr(e4)) ));
HXDLIN( 354)					goto _hx_goto_3;
            				}
            				/* default */{
HXLINE( 357)					::hx::EnumBase e5 = ::hscript::Error_obj::EInvalidOp(op1);
HXDLIN( 357)					HX_STACK_DO_THROW(e5);
            				}
            				_hx_goto_3:;
            			}
            			break;
            			case (int)8: {
HXLINE( 359)				HX_VARI( ::Array< ::Dynamic>,params) = e->_hx_getObject(1).StaticCast< ::Array< ::Dynamic> >();
HXDLIN( 359)				HX_VARI_NAME( ::hx::EnumBase,e6,"e") = e->_hx_getObject(0).StaticCast< ::hx::EnumBase >();
HXLINE( 360)				HX_VARI( ::cpp::VirtualArray,args) = ::cpp::VirtualArray_obj::__new();
HXLINE( 361)				{
HXLINE( 361)					HX_VARI_NAME( Int,_g1,"_g") = (int)0;
HXDLIN( 361)					while((_g1 < params->length)){
HXLINE( 361)						HX_VARI( ::hx::EnumBase,p) = params->__get(_g1).StaticCast< ::hx::EnumBase >();
HXDLIN( 361)						++_g1;
HXLINE( 362)						 ::Dynamic _hx_tmp7 = this->expr(p);
HXDLIN( 362)						args->push(_hx_tmp7);
            					}
            				}
HXLINE( 364)				Int _hx_tmp8 = ( ( ::hx::EnumBase)(e6) )->_hx_getIndex();
HXDLIN( 364)				if ((_hx_tmp8 == (int)5)) {
HXLINE( 365)					HX_VARI_NAME( ::String,f1,"f") = e6->_hx_getString(1);
HXLINE( 366)					HX_VARI(  ::Dynamic,obj) = this->expr(e6->_hx_getObject(0).StaticCast< ::hx::EnumBase >());
HXLINE( 367)					Bool _hx_tmp9 = hx::IsNull( obj );
HXDLIN( 367)					if (_hx_tmp9) {
HXLINE( 367)						::hx::EnumBase e7 = ::hscript::Error_obj::EInvalidAccess(f1);
HXDLIN( 367)						HX_STACK_DO_THROW(e7);
            					}
HXLINE( 368)					return this->fcall(obj,f1,args);
            				}
            				else {
HXLINE( 370)					 ::Dynamic _hx_tmp10 = this->expr(e6);
HXDLIN( 370)					return this->call(null(),_hx_tmp10,args);
            				}
            			}
            			break;
            			case (int)9: {
HXLINE( 372)				HX_VARI_NAME( ::hx::EnumBase,e22,"e2") = e->_hx_getObject(2).StaticCast< ::hx::EnumBase >();
HXDLIN( 372)				HX_VARI_NAME( ::hx::EnumBase,e12,"e1") = e->_hx_getObject(1).StaticCast< ::hx::EnumBase >();
HXLINE( 373)				 ::Dynamic _hx_tmp11 = this->expr(e->_hx_getObject(0).StaticCast< ::hx::EnumBase >());
HXDLIN( 373)				if (hx::IsEq( _hx_tmp11,true )) {
HXLINE( 373)					return this->expr(e12);
            				}
            				else {
HXLINE( 373)					Bool _hx_tmp12 = hx::IsNull( e22 );
HXDLIN( 373)					if (_hx_tmp12) {
HXLINE( 373)						return null();
            					}
            					else {
HXLINE( 373)						return this->expr(e22);
            					}
            				}
            			}
            			break;
            			case (int)10: {
HXLINE( 375)				this->whileLoop(e->_hx_getObject(0).StaticCast< ::hx::EnumBase >(),e->_hx_getObject(1).StaticCast< ::hx::EnumBase >());
HXLINE( 376)				return null();
            			}
            			break;
            			case (int)11: {
HXLINE( 381)				this->forLoop(e->_hx_getString(0),e->_hx_getObject(1).StaticCast< ::hx::EnumBase >(),e->_hx_getObject(2).StaticCast< ::hx::EnumBase >());
HXLINE( 382)				return null();
            			}
            			break;
            			case (int)12: {
HXLINE( 384)				HX_STACK_DO_THROW(::hscript::_Interp::Stop_obj::SBreak_dyn());
            			}
            			break;
            			case (int)13: {
HXLINE( 386)				HX_STACK_DO_THROW(::hscript::_Interp::Stop_obj::SContinue_dyn());
            			}
            			break;
            			case (int)14: {
            				HX_BEGIN_LOCAL_FUNC_S7(hx::LocalFunc,_hx_Closure_0,::String,name,::hx::EnumBase,fexpr, ::hscript::Interp,_gthis,Int,minParams, ::hscript::Interp,me, ::haxe::ds::StringMap,capturedLocals,::Array< ::Dynamic>,params1) HXARGC(1)
            				 ::Dynamic _hx_run(::cpp::VirtualArray args1){
            					HX_STACK_FRAME("hscript.Interp","expr",0xec634974,"hscript.Interp.expr","hscript/Interp.hx",398,0xf078416e)
            					HX_STACK_ARG(args1,"args1")
HXLINE( 399)					Bool _hx_tmp13 = (args1->get_length() != params1->length);
HXDLIN( 399)					if (_hx_tmp13) {
HXLINE( 400)						if ((args1->get_length() < minParams)) {
HXLINE( 401)							HX_VARI( ::String,str) = (((HX_("Invalid number of parameters. Got ",cb,2b,d9,b1) + args1->get_length()) + HX_(", required ",ed,0c,66,93)) + minParams);
HXLINE( 402)							Bool _hx_tmp14 = hx::IsNotNull( name );
HXDLIN( 402)							if (_hx_tmp14) {
HXLINE( 402)								hx::AddEq(str,((HX_(" for function '",f6,90,ab,a0) + name) + HX_("'",27,00,00,00)));
            							}
HXLINE( 403)							HX_STACK_DO_THROW(str);
            						}
HXLINE( 406)						HX_VARI( ::cpp::VirtualArray,args2) = ::cpp::VirtualArray_obj::__new(0);
HXLINE( 407)						HX_VARI( Int,extraParams) = (args1->get_length() - minParams);
HXLINE( 408)						HX_VARI( Int,pos) = (int)0;
HXLINE( 409)						{
HXLINE( 409)							HX_VARI_NAME( Int,_g3,"_g") = (int)0;
HXDLIN( 409)							while((_g3 < params1->length)){
HXLINE( 409)								HX_VARI_NAME(  ::Dynamic,p2,"p") = params1->__get(_g3);
HXDLIN( 409)								++_g3;
HXLINE( 410)								 ::Dynamic _hx_tmp15 = p2->__Field(HX_("opt",33,9c,54,00),hx::paccDynamic);
HXDLIN( 410)								if (_hx_tmp15) {
HXLINE( 411)									if ((extraParams > (int)0)) {
HXLINE( 412)										Int _hx_tmp16 = pos++;
HXDLIN( 412)										 ::Dynamic _hx_tmp17 = args1->__get(_hx_tmp16);
HXDLIN( 412)										args2->push(_hx_tmp17);
HXLINE( 413)										--extraParams;
            									}
            									else {
HXLINE( 415)										args2->push(null());
            									}
            								}
            								else {
HXLINE( 417)									Int _hx_tmp18 = pos++;
HXDLIN( 417)									 ::Dynamic _hx_tmp19 = args1->__get(_hx_tmp18);
HXDLIN( 417)									args2->push(_hx_tmp19);
            								}
            							}
            						}
HXLINE( 418)						args1 = args2;
            					}
HXLINE( 420)					HX_VARI_NAME(  ::haxe::ds::StringMap,old1,"old") = me->locals;
HXDLIN( 420)					HX_VARI( Int,depth) = me->depth;
HXLINE( 421)					me->depth++;
HXLINE( 422)					me->locals = me->duplicate(capturedLocals);
HXLINE( 423)					{
HXLINE( 423)						HX_VARI_NAME( Int,_g11,"_g1") = (int)0;
HXDLIN( 423)						HX_VARI_NAME( Int,_g4,"_g") = params1->length;
HXDLIN( 423)						while((_g11 < _g4)){
HXLINE( 423)							HX_VARI( Int,i) = _g11++;
HXLINE( 424)							 ::Dynamic _hx_tmp20 = args1->__get(i);
HXDLIN( 424)							me->locals->set( ::Dynamic(params1->__get(i)->__Field(HX_("name",4b,72,ff,48),hx::paccDynamic)), ::Dynamic(hx::Anon_obj::Create(1)
            								->setFixed(0,HX_("r",72,00,00,00),_hx_tmp20)));
            						}
            					}
HXLINE( 425)					HX_VARI(  ::Dynamic,r) = null();
HXLINE( 426)					Bool _hx_tmp21 = _gthis->inTry;
HXDLIN( 426)					if (_hx_tmp21) {
HXLINE( 427)						try {
            							HX_STACK_CATCHABLE( ::Dynamic, 0);
HXLINE( 428)							r = me->exprReturn(fexpr);
            						}
            						catch( ::Dynamic _hx_e){
            							if (_hx_e.IsClass<  ::Dynamic >() ){
            								HX_STACK_BEGIN_CATCH
            								 ::Dynamic e8 = _hx_e;
HXLINE( 430)								me->locals = old1;
HXLINE( 431)								me->depth = depth;
HXLINE( 435)								HX_STACK_DO_THROW(e8);
            							}
            							else {
            								HX_STACK_DO_THROW(_hx_e);
            							}
            						}
            					}
            					else {
HXLINE( 439)						r = me->exprReturn(fexpr);
            					}
HXLINE( 440)					me->locals = old1;
HXLINE( 441)					me->depth = depth;
HXLINE( 442)					return r;
            				}
            				HX_END_LOCAL_FUNC1(return)

HXLINE( 389)				HX_VARI( ::String,name) = e->_hx_getString(2);
HXDLIN( 389)				HX_VARI( ::hx::EnumBase,fexpr) = e->_hx_getObject(1).StaticCast< ::hx::EnumBase >();
HXDLIN( 389)				HX_VARI_NAME( ::Array< ::Dynamic>,params1,"params") = e->_hx_getObject(0).StaticCast< ::Array< ::Dynamic> >();
HXLINE( 390)				HX_VARI(  ::haxe::ds::StringMap,capturedLocals) = this->duplicate(this->locals);
HXLINE( 391)				HX_VARI(  ::hscript::Interp,me) = hx::ObjectPtr<OBJ_>(this);
HXLINE( 392)				HX_VARI( Int,minParams) = (int)0;
HXLINE( 393)				{
HXLINE( 393)					HX_VARI_NAME( Int,_g2,"_g") = (int)0;
HXDLIN( 393)					while((_g2 < params1->length)){
HXLINE( 393)						HX_VARI_NAME(  ::Dynamic,p1,"p") = params1->__get(_g2);
HXDLIN( 393)						++_g2;
HXLINE( 394)						if (!(( (Bool)(p1->__Field(HX_("opt",33,9c,54,00),hx::paccDynamic)) ))) {
HXLINE( 397)							++minParams;
            						}
            					}
            				}
HXLINE( 398)				HX_VARI_NAME(  ::Dynamic,f2,"f") =  ::Dynamic(new _hx_Closure_0(name,fexpr,_gthis,minParams,me,capturedLocals,params1));
HXLINE( 444)				HX_VARI_NAME(  ::Dynamic,f3,"f") = ::Reflect_obj::makeVarArgs(f2);
HXLINE( 445)				Bool _hx_tmp22 = hx::IsNotNull( name );
HXDLIN( 445)				if (_hx_tmp22) {
HXLINE( 446)					Bool _hx_tmp23 = (this->depth == (int)0);
HXDLIN( 446)					if (_hx_tmp23) {
HXLINE( 448)						this->variables->set(name,f3);
            					}
            					else {
HXLINE( 451)						this->declared->push( ::Dynamic(hx::Anon_obj::Create(2)
            							->setFixed(0,HX_("n",6e,00,00,00),name)
            							->setFixed(1,HX_("old",a7,98,54,00),this->locals->get(name))));
HXLINE( 452)						HX_VARI(  ::Dynamic,ref) =  ::Dynamic(hx::Anon_obj::Create(1)
            							->setFixed(0,HX_("r",72,00,00,00),f3));
HXLINE( 453)						this->locals->set(name,ref);
HXLINE( 454)						capturedLocals->set(name,ref);
            					}
            				}
HXLINE( 457)				return f3;
            			}
            			break;
            			case (int)15: {
HXLINE( 387)				HX_VARI_NAME( ::hx::EnumBase,e9,"e") = e->_hx_getObject(0).StaticCast< ::hx::EnumBase >();
HXLINE( 388)				 ::Dynamic _hx_tmp24;
HXDLIN( 388)				Bool _hx_tmp25 = hx::IsNull( e9 );
HXDLIN( 388)				if (_hx_tmp25) {
HXLINE( 388)					_hx_tmp24 = null();
            				}
            				else {
HXLINE( 388)					_hx_tmp24 = this->expr(e9);
            				}
HXDLIN( 388)				HX_STACK_DO_THROW(::hscript::_Interp::Stop_obj::SReturn(_hx_tmp24));
            			}
            			break;
            			case (int)16: {
HXLINE( 500)				HX_VARI( ::hx::EnumBase,index) = e->_hx_getObject(1).StaticCast< ::hx::EnumBase >();
HXLINE( 501)				HX_VARI(  ::Dynamic,arr) = this->expr(e->_hx_getObject(0).StaticCast< ::hx::EnumBase >());
HXLINE( 502)				HX_VARI_NAME(  ::Dynamic,index1,"index") = this->expr(index);
HXLINE( 503)				Bool _hx_tmp26 = ::Std_obj::is(arr,hx::ClassOf< ::haxe::IMap >());
HXDLIN( 503)				if (_hx_tmp26) {
HXLINE( 504)					return ::haxe::IMap_obj::get(arr,index1);
            				}
            				else {
HXLINE( 507)					return arr->__GetItem(( (Int)(index1) ));
            				}
            			}
            			break;
            			case (int)17: {
HXLINE( 458)				HX_VARI_NAME( ::Array< ::Dynamic>,arr1,"arr") = e->_hx_getObject(0).StaticCast< ::Array< ::Dynamic> >();
HXLINE( 459)				Bool _hx_tmp27;
HXDLIN( 459)				Bool _hx_tmp28 = (arr1->length > (int)0);
HXDLIN( 459)				if (_hx_tmp28) {
HXLINE( 459)					HX_VARI_NAME( ::hx::EnumBase,_g5,"_g") = arr1->__get((int)0).StaticCast< ::hx::EnumBase >();
HXDLIN( 459)					Int _hx_tmp29 = ( ( ::hx::EnumBase)(_g5) )->_hx_getIndex();
HXDLIN( 459)					if ((_hx_tmp29 == (int)6)) {
HXLINE( 459)						if ((_g5->_hx_getString(0) == HX_("=>",61,35,00,00))) {
HXLINE( 459)							_hx_tmp27 = true;
            						}
            						else {
HXLINE( 459)							_hx_tmp27 = false;
            						}
            					}
            					else {
HXLINE( 459)						_hx_tmp27 = false;
            					}
            				}
            				else {
HXLINE( 459)					_hx_tmp27 = false;
            				}
HXDLIN( 459)				if (_hx_tmp27) {
HXLINE( 460)					HX_VARI( Bool,isAllString) = true;
HXLINE( 461)					HX_VARI( Bool,isAllInt) = true;
HXLINE( 462)					HX_VARI( Bool,isAllObject) = true;
HXLINE( 463)					HX_VARI( Bool,isAllEnum) = true;
HXLINE( 464)					HX_VARI( ::cpp::VirtualArray,keys) = ::cpp::VirtualArray_obj::__new(0);
HXLINE( 465)					HX_VARI( ::cpp::VirtualArray,values) = ::cpp::VirtualArray_obj::__new(0);
HXLINE( 466)					{
HXLINE( 466)						HX_VARI_NAME( Int,_g12,"_g1") = (int)0;
HXDLIN( 466)						while((_g12 < arr1->length)){
HXLINE( 466)							HX_VARI_NAME( ::hx::EnumBase,e10,"e") = arr1->__get(_g12).StaticCast< ::hx::EnumBase >();
HXDLIN( 466)							++_g12;
HXLINE( 467)							Int _hx_tmp30 = ( ( ::hx::EnumBase)(e10) )->_hx_getIndex();
HXDLIN( 467)							if ((_hx_tmp30 == (int)6)) {
HXLINE( 467)								if ((e10->_hx_getString(0) == HX_("=>",61,35,00,00))) {
HXLINE( 469)									HX_VARI(  ::Dynamic,key) = this->expr(e10->_hx_getObject(1).StaticCast< ::hx::EnumBase >());
HXLINE( 470)									HX_VARI(  ::Dynamic,value) = this->expr(e10->_hx_getObject(2).StaticCast< ::hx::EnumBase >());
HXLINE( 471)									if (isAllString) {
HXLINE( 471)										isAllString = ::Std_obj::is(key,hx::ClassOf< ::String >());
            									}
            									else {
HXLINE( 471)										isAllString = false;
            									}
HXLINE( 472)									if (isAllInt) {
HXLINE( 472)										isAllInt = ::Std_obj::is(key,hx::ClassOf< ::Int >());
            									}
            									else {
HXLINE( 472)										isAllInt = false;
            									}
HXLINE( 473)									if (isAllObject) {
HXLINE( 473)										isAllObject = ::Reflect_obj::isObject(key);
            									}
            									else {
HXLINE( 473)										isAllObject = false;
            									}
HXLINE( 474)									if (isAllEnum) {
HXLINE( 474)										isAllEnum = ::Reflect_obj::isEnumValue(key);
            									}
            									else {
HXLINE( 474)										isAllEnum = false;
            									}
HXLINE( 475)									keys->push(key);
HXLINE( 476)									values->push(value);
            								}
            								else {
HXLINE( 478)									HX_STACK_DO_THROW(HX_("=> expected",17,e5,65,e5));
            								}
            							}
            							else {
HXLINE( 478)								HX_STACK_DO_THROW(HX_("=> expected",17,e5,65,e5));
            							}
            						}
            					}
HXLINE( 481)					HX_VAR(  ::Dynamic,map);
HXLINE( 482)					if (isAllInt) {
HXLINE( 481)						map =  ::haxe::ds::IntMap_obj::__new();
            					}
            					else {
HXLINE( 483)						if (isAllString) {
HXLINE( 481)							map =  ::haxe::ds::StringMap_obj::__new();
            						}
            						else {
HXLINE( 484)							if (isAllEnum) {
HXLINE( 481)								map =  ::haxe::ds::EnumValueMap_obj::__new();
            							}
            							else {
HXLINE( 485)								if (isAllObject) {
HXLINE( 481)									map =  ::haxe::ds::ObjectMap_obj::__new();
            								}
            								else {
HXLINE( 486)									HX_STACK_DO_THROW(HX_("Inconsistent key types",af,4f,50,a9));
            								}
            							}
            						}
            					}
HXLINE( 488)					{
HXLINE( 488)						HX_VARI_NAME( Int,_g21,"_g2") = (int)0;
HXDLIN( 488)						HX_VARI_NAME( Int,_g13,"_g1") = keys->get_length();
HXDLIN( 488)						while((_g21 < _g13)){
HXLINE( 488)							HX_VARI_NAME( Int,n1,"n") = _g21++;
HXLINE( 489)							::Dynamic _hx_tmp31 = map;
HXDLIN( 489)							 ::Dynamic _hx_tmp32 = keys->__get(n1);
HXDLIN( 489)							 ::Dynamic _hx_tmp33 = values->__get(n1);
HXDLIN( 489)							::haxe::IMap_obj::set(_hx_tmp31,_hx_tmp32,_hx_tmp33);
            						}
            					}
HXLINE( 491)					return map;
            				}
            				else {
HXLINE( 494)					HX_VARI( ::cpp::VirtualArray,a) = ::cpp::VirtualArray_obj::__new();
HXLINE( 495)					{
HXLINE( 495)						HX_VARI_NAME( Int,_g14,"_g1") = (int)0;
HXDLIN( 495)						while((_g14 < arr1->length)){
HXLINE( 495)							HX_VARI_NAME( ::hx::EnumBase,e13,"e") = arr1->__get(_g14).StaticCast< ::hx::EnumBase >();
HXDLIN( 495)							++_g14;
HXLINE( 496)							 ::Dynamic _hx_tmp34 = this->expr(e13);
HXDLIN( 496)							a->push(_hx_tmp34);
            						}
            					}
HXLINE( 498)					return a;
            				}
            			}
            			break;
            			case (int)18: {
HXLINE( 509)				HX_VARI_NAME( ::Array< ::Dynamic>,params2,"params") = e->_hx_getObject(1).StaticCast< ::Array< ::Dynamic> >();
HXDLIN( 509)				HX_VARI( ::String,cl) = e->_hx_getString(0);
HXLINE( 510)				HX_VARI_NAME( ::cpp::VirtualArray,a1,"a") = ::cpp::VirtualArray_obj::__new();
HXLINE( 511)				{
HXLINE( 511)					HX_VARI_NAME( Int,_g6,"_g") = (int)0;
HXDLIN( 511)					while((_g6 < params2->length)){
HXLINE( 511)						HX_VARI_NAME( ::hx::EnumBase,e14,"e") = params2->__get(_g6).StaticCast< ::hx::EnumBase >();
HXDLIN( 511)						++_g6;
HXLINE( 512)						 ::Dynamic _hx_tmp35 = this->expr(e14);
HXDLIN( 512)						a1->push(_hx_tmp35);
            					}
            				}
HXLINE( 513)				return this->cnew(cl,a1);
            			}
            			break;
            			case (int)19: {
HXLINE( 515)				HX_STACK_DO_THROW(this->expr(e->_hx_getObject(0).StaticCast< ::hx::EnumBase >()));
            			}
            			break;
            			case (int)20: {
HXLINE( 516)				HX_VARI( ::hx::EnumBase,ecatch) = e->_hx_getObject(3).StaticCast< ::hx::EnumBase >();
HXDLIN( 516)				HX_VARI_NAME( ::String,n2,"n") = e->_hx_getString(1);
HXDLIN( 516)				HX_VARI_NAME( ::hx::EnumBase,e15,"e") = e->_hx_getObject(0).StaticCast< ::hx::EnumBase >();
HXLINE( 517)				HX_VARI_NAME( Int,old2,"old") = this->declared->length;
HXLINE( 518)				HX_VARI( Bool,oldTry) = this->inTry;
HXLINE( 519)				try {
            					HX_STACK_CATCHABLE(::hx::EnumBase, 0);
            					HX_STACK_CATCHABLE( ::Dynamic, 1);
HXLINE( 520)					this->inTry = true;
HXLINE( 521)					HX_VARI_NAME(  ::Dynamic,v1,"v") = this->expr(e15);
HXLINE( 522)					this->restore(old2);
HXLINE( 523)					this->inTry = oldTry;
HXLINE( 524)					return v1;
            				}
            				catch( ::Dynamic _hx_e){
            					if (_hx_e.IsClass< ::hx::EnumBase >() ){
            						HX_STACK_BEGIN_CATCH
            						::hx::EnumBase err = _hx_e;
HXLINE( 526)						this->inTry = oldTry;
HXLINE( 527)						HX_STACK_DO_THROW(err);
            					}
            					else if (_hx_e.IsClass<  ::Dynamic >() ){
            						HX_STACK_BEGIN_CATCH
            						 ::Dynamic err1 = _hx_e;
HXLINE( 530)						this->restore(old2);
HXLINE( 531)						this->inTry = oldTry;
HXLINE( 533)						this->declared->push( ::Dynamic(hx::Anon_obj::Create(2)
            							->setFixed(0,HX_("n",6e,00,00,00),n2)
            							->setFixed(1,HX_("old",a7,98,54,00),this->locals->get(n2))));
HXLINE( 534)						this->locals->set(n2, ::Dynamic(hx::Anon_obj::Create(1)
            							->setFixed(0,HX_("r",72,00,00,00),err1)));
HXLINE( 535)						HX_VARI_NAME(  ::Dynamic,v2,"v") = this->expr(ecatch);
HXLINE( 536)						this->restore(old2);
HXLINE( 537)						return v2;
            					}
            					else {
            						HX_STACK_DO_THROW(_hx_e);
            					}
            				}
            			}
            			break;
            			case (int)21: {
HXLINE( 539)				HX_VARI( ::Array< ::Dynamic>,fl) = e->_hx_getObject(0).StaticCast< ::Array< ::Dynamic> >();
HXLINE( 540)				HX_VARI(  ::Dynamic,o) =  ::Dynamic(hx::Anon_obj::Create(0));
HXLINE( 541)				{
HXLINE( 541)					HX_VARI_NAME( Int,_g7,"_g") = (int)0;
HXDLIN( 541)					while((_g7 < fl->length)){
HXLINE( 541)						HX_VARI_NAME(  ::Dynamic,f4,"f") = fl->__get(_g7);
HXDLIN( 541)						++_g7;
HXLINE( 542)						 ::Dynamic _hx_tmp36 = this->expr( ::Dynamic(f4->__Field(HX_("e",65,00,00,00),hx::paccDynamic)));
HXDLIN( 542)						this->set(o, ::Dynamic(f4->__Field(HX_("name",4b,72,ff,48),hx::paccDynamic)),_hx_tmp36);
            					}
            				}
HXLINE( 543)				return o;
            			}
            			break;
            			case (int)22: {
HXLINE( 544)				HX_VARI_NAME( ::hx::EnumBase,e23,"e2") = e->_hx_getObject(2).StaticCast< ::hx::EnumBase >();
HXDLIN( 544)				HX_VARI_NAME( ::hx::EnumBase,e16,"e1") = e->_hx_getObject(1).StaticCast< ::hx::EnumBase >();
HXLINE( 545)				 ::Dynamic _hx_tmp37 = this->expr(e->_hx_getObject(0).StaticCast< ::hx::EnumBase >());
HXDLIN( 545)				if (hx::IsEq( _hx_tmp37,true )) {
HXLINE( 545)					return this->expr(e16);
            				}
            				else {
HXLINE( 545)					return this->expr(e23);
            				}
            			}
            			break;
            			case (int)23: {
HXLINE( 546)				HX_VARI( ::hx::EnumBase,def) = e->_hx_getObject(2).StaticCast< ::hx::EnumBase >();
HXDLIN( 546)				HX_VARI( ::Array< ::Dynamic>,cases) = e->_hx_getObject(1).StaticCast< ::Array< ::Dynamic> >();
HXLINE( 547)				HX_VARI(  ::Dynamic,val) = this->expr(e->_hx_getObject(0).StaticCast< ::hx::EnumBase >());
HXLINE( 548)				HX_VARI( Bool,match) = false;
HXLINE( 549)				{
HXLINE( 549)					HX_VARI_NAME( Int,_g8,"_g") = (int)0;
HXDLIN( 549)					while((_g8 < cases->length)){
HXLINE( 549)						HX_VARI_NAME(  ::Dynamic,c1,"c") = cases->__get(_g8);
HXDLIN( 549)						++_g8;
HXLINE( 550)						{
HXLINE( 550)							HX_VARI_NAME( Int,_g15,"_g1") = (int)0;
HXDLIN( 550)							HX_VARI_NAME( ::Array< ::Dynamic>,_g22,"_g2") = ( (::Array< ::Dynamic>)(c1->__Field(HX_("values",e2,03,b7,4f),hx::paccDynamic)) );
HXDLIN( 550)							while((_g15 < _g22->length)){
HXLINE( 550)								HX_VARI_NAME( ::hx::EnumBase,v3,"v") = _g22->__get(_g15).StaticCast< ::hx::EnumBase >();
HXDLIN( 550)								++_g15;
HXLINE( 551)								 ::Dynamic _hx_tmp38 = this->expr(v3);
HXDLIN( 551)								if (hx::IsEq( _hx_tmp38,val )) {
HXLINE( 552)									match = true;
HXLINE( 553)									goto _hx_goto_14;
            								}
            							}
            							_hx_goto_14:;
            						}
HXLINE( 555)						if (match) {
HXLINE( 556)							val = this->expr( ::Dynamic(c1->__Field(HX_("expr",35,fd,1d,43),hx::paccDynamic)));
HXLINE( 557)							goto _hx_goto_13;
            						}
            					}
            					_hx_goto_13:;
            				}
HXLINE( 560)				if (!(match)) {
HXLINE( 561)					Bool _hx_tmp39 = hx::IsNull( def );
HXDLIN( 561)					if (_hx_tmp39) {
HXLINE( 561)						val = null();
            					}
            					else {
HXLINE( 561)						val = this->expr(def);
            					}
            				}
HXLINE( 562)				return val;
            			}
            			break;
            			case (int)24: {
HXLINE( 378)				this->doWhileLoop(e->_hx_getObject(0).StaticCast< ::hx::EnumBase >(),e->_hx_getObject(1).StaticCast< ::hx::EnumBase >());
HXLINE( 379)				return null();
            			}
            			break;
            			case (int)25: {
HXLINE( 564)				return this->expr(e->_hx_getObject(2).StaticCast< ::hx::EnumBase >());
            			}
            			break;
            		}
HXLINE( 309)		return null();
            	}


HX_DEFINE_DYNAMIC_FUNC1(Interp_obj,expr,return )

void Interp_obj::doWhileLoop(::hx::EnumBase econd,::hx::EnumBase e){
            	HX_STACK_FRAME("hscript.Interp","doWhileLoop",0x813d4b4b,"hscript.Interp.doWhileLoop","hscript/Interp.hx",569,0xf078416e)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(econd,"econd")
            	HX_STACK_ARG(e,"e")
HXLINE( 570)		HX_VARI( Int,old) = this->declared->length;
HXLINE( 571)		while(true){
HXLINE( 572)			try {
            				HX_STACK_CATCHABLE(::hx::EnumBase, 0);
HXLINE( 573)				this->expr(e);
            			}
            			catch( ::Dynamic _hx_e){
            				if (_hx_e.IsClass< ::hx::EnumBase >() ){
            					HX_STACK_BEGIN_CATCH
            					::hx::EnumBase err = _hx_e;
HXLINE( 575)					Int _hx_tmp = ( ( ::hx::EnumBase)(err) )->_hx_getIndex();
HXDLIN( 575)					switch((int)(_hx_tmp)){
            						case (int)0: {
HXLINE( 577)							goto _hx_goto_15;
            						}
            						break;
            						case (int)1: {
            						}
            						break;
            						case (int)2: {
HXLINE( 578)							HX_STACK_DO_THROW(err);
            						}
            						break;
            					}
            				}
            				else {
            					HX_STACK_DO_THROW(_hx_e);
            				}
            			}
HXLINE( 582)			 ::Dynamic _hx_tmp1 = this->expr(econd);
HXLINE( 571)			if (!(hx::IsEq( _hx_tmp1,true ))) {
HXLINE( 571)				goto _hx_goto_15;
            			}
            		}
            		_hx_goto_15:;
HXLINE( 583)		this->restore(old);
            	}


HX_DEFINE_DYNAMIC_FUNC2(Interp_obj,doWhileLoop,(void))

void Interp_obj::whileLoop(::hx::EnumBase econd,::hx::EnumBase e){
            	HX_STACK_FRAME("hscript.Interp","whileLoop",0xce1b3216,"hscript.Interp.whileLoop","hscript/Interp.hx",586,0xf078416e)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(econd,"econd")
            	HX_STACK_ARG(e,"e")
HXLINE( 587)		HX_VARI( Int,old) = this->declared->length;
HXLINE( 588)		while(true){
HXLINE( 588)			 ::Dynamic _hx_tmp = this->expr(econd);
HXDLIN( 588)			if (!(hx::IsEq( _hx_tmp,true ))) {
HXLINE( 588)				goto _hx_goto_16;
            			}
HXLINE( 589)			try {
            				HX_STACK_CATCHABLE(::hx::EnumBase, 0);
HXLINE( 590)				this->expr(e);
            			}
            			catch( ::Dynamic _hx_e){
            				if (_hx_e.IsClass< ::hx::EnumBase >() ){
            					HX_STACK_BEGIN_CATCH
            					::hx::EnumBase err = _hx_e;
HXLINE( 592)					Int _hx_tmp1 = ( ( ::hx::EnumBase)(err) )->_hx_getIndex();
HXDLIN( 592)					switch((int)(_hx_tmp1)){
            						case (int)0: {
HXLINE( 594)							goto _hx_goto_16;
            						}
            						break;
            						case (int)1: {
            						}
            						break;
            						case (int)2: {
HXLINE( 595)							HX_STACK_DO_THROW(err);
            						}
            						break;
            					}
            				}
            				else {
            					HX_STACK_DO_THROW(_hx_e);
            				}
            			}
            		}
            		_hx_goto_16:;
HXLINE( 599)		this->restore(old);
            	}


HX_DEFINE_DYNAMIC_FUNC2(Interp_obj,whileLoop,(void))

 ::Dynamic Interp_obj::makeIterator( ::Dynamic v){
            	HX_STACK_FRAME("hscript.Interp","makeIterator",0x634d013b,"hscript.Interp.makeIterator","hscript/Interp.hx",602,0xf078416e)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(v,"v")
HXLINE( 606)		try {
            			HX_STACK_CATCHABLE( ::Dynamic, 0);
HXLINE( 606)			v =  ::Dynamic(v->__Field(HX_("iterator",ee,49,9a,93),hx::paccDynamic))();
            		}
            		catch( ::Dynamic _hx_e){
            			if (_hx_e.IsClass<  ::Dynamic >() ){
            				HX_STACK_BEGIN_CATCH
            				 ::Dynamic e = _hx_e;
            			}
            			else {
            				HX_STACK_DO_THROW(_hx_e);
            			}
            		}
HXLINE( 608)		Bool _hx_tmp;
HXDLIN( 608)		Bool _hx_tmp1 = hx::IsNotNull(  ::Dynamic(v->__Field(HX_("hasNext",6d,a5,46,18),hx::paccDynamic)) );
HXDLIN( 608)		if (_hx_tmp1) {
HXLINE( 608)			_hx_tmp = hx::IsNull(  ::Dynamic(v->__Field(HX_("next",f3,84,02,49),hx::paccDynamic)) );
            		}
            		else {
HXLINE( 608)			_hx_tmp = true;
            		}
HXDLIN( 608)		if (_hx_tmp) {
HXLINE( 608)			::hx::EnumBase e1 = ::hscript::Error_obj::EInvalidIterator(v);
HXDLIN( 608)			HX_STACK_DO_THROW(e1);
            		}
HXLINE( 609)		return v;
            	}


HX_DEFINE_DYNAMIC_FUNC1(Interp_obj,makeIterator,return )

void Interp_obj::forLoop(::String n,::hx::EnumBase it,::hx::EnumBase e){
            	HX_STACK_FRAME("hscript.Interp","forLoop",0xdf1ff72e,"hscript.Interp.forLoop","hscript/Interp.hx",612,0xf078416e)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(n,"n")
            	HX_STACK_ARG(it,"it")
            	HX_STACK_ARG(e,"e")
HXLINE( 613)		HX_VARI( Int,old) = this->declared->length;
HXLINE( 614)		this->declared->push( ::Dynamic(hx::Anon_obj::Create(2)
            			->setFixed(0,HX_("n",6e,00,00,00),n)
            			->setFixed(1,HX_("old",a7,98,54,00),this->locals->get(n))));
HXLINE( 615)		 ::Dynamic _hx_tmp = this->expr(it);
HXDLIN( 615)		HX_VARI_NAME(  ::Dynamic,it1,"it") = this->makeIterator(_hx_tmp);
HXLINE( 616)		while(true){
HXLINE( 616)			Bool _hx_tmp1 = !(( (Bool)( ::Dynamic(it1->__Field(HX_("hasNext",6d,a5,46,18),hx::paccDynamic))()) ));
HXDLIN( 616)			if (_hx_tmp1) {
HXLINE( 616)				goto _hx_goto_17;
            			}
HXLINE( 617)			{
HXLINE( 617)				 ::Dynamic _hx_tmp2 =  ::Dynamic(it1->__Field(HX_("next",f3,84,02,49),hx::paccDynamic))();
HXDLIN( 617)				this->locals->set(n, ::Dynamic(hx::Anon_obj::Create(1)
            					->setFixed(0,HX_("r",72,00,00,00),_hx_tmp2)));
            			}
HXLINE( 618)			try {
            				HX_STACK_CATCHABLE(::hx::EnumBase, 0);
HXLINE( 619)				this->expr(e);
            			}
            			catch( ::Dynamic _hx_e){
            				if (_hx_e.IsClass< ::hx::EnumBase >() ){
            					HX_STACK_BEGIN_CATCH
            					::hx::EnumBase err = _hx_e;
HXLINE( 621)					Int _hx_tmp3 = ( ( ::hx::EnumBase)(err) )->_hx_getIndex();
HXDLIN( 621)					switch((int)(_hx_tmp3)){
            						case (int)0: {
HXLINE( 623)							goto _hx_goto_17;
            						}
            						break;
            						case (int)1: {
            						}
            						break;
            						case (int)2: {
HXLINE( 624)							HX_STACK_DO_THROW(err);
            						}
            						break;
            					}
            				}
            				else {
            					HX_STACK_DO_THROW(_hx_e);
            				}
            			}
            		}
            		_hx_goto_17:;
HXLINE( 628)		this->restore(old);
            	}


HX_DEFINE_DYNAMIC_FUNC3(Interp_obj,forLoop,(void))

Bool Interp_obj::isMap( ::Dynamic o){
            	HX_STACK_FRAME("hscript.Interp","isMap",0x34ae9fb3,"hscript.Interp.isMap","hscript/Interp.hx",632,0xf078416e)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(o,"o")
HXLINE( 632)		return ::Std_obj::is(o,hx::ClassOf< ::haxe::IMap >());
            	}


HX_DEFINE_DYNAMIC_FUNC1(Interp_obj,isMap,return )

 ::Dynamic Interp_obj::getMapValue( ::Dynamic map, ::Dynamic key){
            	HX_STACK_FRAME("hscript.Interp","getMapValue",0x1594fb8c,"hscript.Interp.getMapValue","hscript/Interp.hx",636,0xf078416e)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(map,"map")
            	HX_STACK_ARG(key,"key")
HXLINE( 636)		return ::haxe::IMap_obj::get(map,key);
            	}


HX_DEFINE_DYNAMIC_FUNC2(Interp_obj,getMapValue,return )

void Interp_obj::setMapValue( ::Dynamic map, ::Dynamic key, ::Dynamic value){
            	HX_STACK_FRAME("hscript.Interp","setMapValue",0x20020298,"hscript.Interp.setMapValue","hscript/Interp.hx",640,0xf078416e)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(map,"map")
            	HX_STACK_ARG(key,"key")
            	HX_STACK_ARG(value,"value")
HXLINE( 640)		::haxe::IMap_obj::set(map,key,value);
            	}


HX_DEFINE_DYNAMIC_FUNC3(Interp_obj,setMapValue,(void))

 ::Dynamic Interp_obj::get( ::Dynamic o,::String f){
            	HX_STACK_FRAME("hscript.Interp","get",0xf7e1c137,"hscript.Interp.get","hscript/Interp.hx",643,0xf078416e)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(o,"o")
            	HX_STACK_ARG(f,"f")
HXLINE( 644)		Bool _hx_tmp = hx::IsNull( o );
HXDLIN( 644)		if (_hx_tmp) {
HXLINE( 644)			::hx::EnumBase e = ::hscript::Error_obj::EInvalidAccess(f);
HXDLIN( 644)			HX_STACK_DO_THROW(e);
            		}
HXLINE( 645)		return ::Reflect_obj::getProperty(o,f);
            	}


HX_DEFINE_DYNAMIC_FUNC2(Interp_obj,get,return )

 ::Dynamic Interp_obj::set( ::Dynamic o,::String f, ::Dynamic v){
            	HX_STACK_FRAME("hscript.Interp","set",0xf7eadc43,"hscript.Interp.set","hscript/Interp.hx",659,0xf078416e)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(o,"o")
            	HX_STACK_ARG(f,"f")
            	HX_STACK_ARG(v,"v")
HXLINE( 660)		Bool _hx_tmp = hx::IsNull( o );
HXDLIN( 660)		if (_hx_tmp) {
HXLINE( 660)			::hx::EnumBase e = ::hscript::Error_obj::EInvalidAccess(f);
HXDLIN( 660)			HX_STACK_DO_THROW(e);
            		}
HXLINE( 661)		::Reflect_obj::setProperty(o,f,v);
HXLINE( 662)		return v;
            	}


HX_DEFINE_DYNAMIC_FUNC3(Interp_obj,set,return )

 ::Dynamic Interp_obj::fcall( ::Dynamic o,::String f,::cpp::VirtualArray args){
            	HX_STACK_FRAME("hscript.Interp","fcall",0x6ff6aee5,"hscript.Interp.fcall","hscript/Interp.hx",666,0xf078416e)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(o,"o")
            	HX_STACK_ARG(f,"f")
            	HX_STACK_ARG(args,"args")
HXLINE( 666)		 ::Dynamic _hx_tmp = this->get(o,f);
HXDLIN( 666)		return this->call(o,_hx_tmp,args);
            	}


HX_DEFINE_DYNAMIC_FUNC3(Interp_obj,fcall,return )

 ::Dynamic Interp_obj::call( ::Dynamic o, ::Dynamic f,::cpp::VirtualArray args){
            	HX_STACK_FRAME("hscript.Interp","call",0xeaff64dd,"hscript.Interp.call","hscript/Interp.hx",670,0xf078416e)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(o,"o")
            	HX_STACK_ARG(f,"f")
            	HX_STACK_ARG(args,"args")
HXLINE( 670)		return ::Reflect_obj::callMethod(o,f,args);
            	}


HX_DEFINE_DYNAMIC_FUNC3(Interp_obj,call,return )

 ::Dynamic Interp_obj::cnew(::String cl,::cpp::VirtualArray args){
            	HX_STACK_FRAME("hscript.Interp","cnew",0xeb093c1c,"hscript.Interp.cnew","hscript/Interp.hx",673,0xf078416e)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(cl,"cl")
            	HX_STACK_ARG(args,"args")
HXLINE( 674)		HX_VARI( hx::Class,c) = ::Type_obj::resolveClass(cl);
HXLINE( 675)		Bool _hx_tmp = hx::IsNull( c );
HXDLIN( 675)		if (_hx_tmp) {
HXLINE( 675)			c = this->resolve(cl);
            		}
HXLINE( 676)		return ::Type_obj::createInstance(c,args);
            	}


HX_DEFINE_DYNAMIC_FUNC2(Interp_obj,cnew,return )


Interp_obj::Interp_obj()
{
}

void Interp_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(Interp);
	HX_MARK_MEMBER_NAME(variables,"variables");
	HX_MARK_MEMBER_NAME(locals,"locals");
	HX_MARK_MEMBER_NAME(binops,"binops");
	HX_MARK_MEMBER_NAME(depth,"depth");
	HX_MARK_MEMBER_NAME(inTry,"inTry");
	HX_MARK_MEMBER_NAME(declared,"declared");
	HX_MARK_END_CLASS();
}

void Interp_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(variables,"variables");
	HX_VISIT_MEMBER_NAME(locals,"locals");
	HX_VISIT_MEMBER_NAME(binops,"binops");
	HX_VISIT_MEMBER_NAME(depth,"depth");
	HX_VISIT_MEMBER_NAME(inTry,"inTry");
	HX_VISIT_MEMBER_NAME(declared,"declared");
}

hx::Val Interp_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 3:
		if (HX_FIELD_EQ(inName,"get") ) { return hx::Val( get_dyn()); }
		if (HX_FIELD_EQ(inName,"set") ) { return hx::Val( set_dyn()); }
		break;
	case 4:
		if (HX_FIELD_EQ(inName,"edef") ) { return hx::Val( edef_dyn()); }
		if (HX_FIELD_EQ(inName,"expr") ) { return hx::Val( expr_dyn()); }
		if (HX_FIELD_EQ(inName,"call") ) { return hx::Val( call_dyn()); }
		if (HX_FIELD_EQ(inName,"cnew") ) { return hx::Val( cnew_dyn()); }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"depth") ) { return hx::Val( depth); }
		if (HX_FIELD_EQ(inName,"inTry") ) { return hx::Val( inTry); }
		if (HX_FIELD_EQ(inName,"error") ) { return hx::Val( error_dyn()); }
		if (HX_FIELD_EQ(inName,"isMap") ) { return hx::Val( isMap_dyn()); }
		if (HX_FIELD_EQ(inName,"fcall") ) { return hx::Val( fcall_dyn()); }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"locals") ) { return hx::Val( locals); }
		if (HX_FIELD_EQ(inName,"binops") ) { return hx::Val( binops); }
		if (HX_FIELD_EQ(inName,"assign") ) { return hx::Val( assign_dyn()); }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"initOps") ) { return hx::Val( initOps_dyn()); }
		if (HX_FIELD_EQ(inName,"execute") ) { return hx::Val( execute_dyn()); }
		if (HX_FIELD_EQ(inName,"restore") ) { return hx::Val( restore_dyn()); }
		if (HX_FIELD_EQ(inName,"resolve") ) { return hx::Val( resolve_dyn()); }
		if (HX_FIELD_EQ(inName,"forLoop") ) { return hx::Val( forLoop_dyn()); }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"declared") ) { return hx::Val( declared); }
		if (HX_FIELD_EQ(inName,"posInfos") ) { return hx::Val( posInfos_dyn()); }
		if (HX_FIELD_EQ(inName,"assignOp") ) { return hx::Val( assignOp_dyn()); }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"variables") ) { return hx::Val( variables); }
		if (HX_FIELD_EQ(inName,"increment") ) { return hx::Val( increment_dyn()); }
		if (HX_FIELD_EQ(inName,"duplicate") ) { return hx::Val( duplicate_dyn()); }
		if (HX_FIELD_EQ(inName,"whileLoop") ) { return hx::Val( whileLoop_dyn()); }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"exprReturn") ) { return hx::Val( exprReturn_dyn()); }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"doWhileLoop") ) { return hx::Val( doWhileLoop_dyn()); }
		if (HX_FIELD_EQ(inName,"getMapValue") ) { return hx::Val( getMapValue_dyn()); }
		if (HX_FIELD_EQ(inName,"setMapValue") ) { return hx::Val( setMapValue_dyn()); }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"evalAssignOp") ) { return hx::Val( evalAssignOp_dyn()); }
		if (HX_FIELD_EQ(inName,"makeIterator") ) { return hx::Val( makeIterator_dyn()); }
	}
	return super::__Field(inName,inCallProp);
}

hx::Val Interp_obj::__SetField(const ::String &inName,const hx::Val &inValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 5:
		if (HX_FIELD_EQ(inName,"depth") ) { depth=inValue.Cast< Int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"inTry") ) { inTry=inValue.Cast< Bool >(); return inValue; }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"locals") ) { locals=inValue.Cast<  ::haxe::ds::StringMap >(); return inValue; }
		if (HX_FIELD_EQ(inName,"binops") ) { binops=inValue.Cast<  ::haxe::ds::StringMap >(); return inValue; }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"declared") ) { declared=inValue.Cast< ::Array< ::Dynamic> >(); return inValue; }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"variables") ) { variables=inValue.Cast<  ::haxe::ds::StringMap >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void Interp_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_HCSTRING("variables","\xb7","\xe2","\x62","\x82"));
	outFields->push(HX_HCSTRING("locals","\xa8","\x74","\xbf","\x59"));
	outFields->push(HX_HCSTRING("binops","\xcb","\x59","\x16","\xed"));
	outFields->push(HX_HCSTRING("depth","\x03","\xf1","\x29","\xd7"));
	outFields->push(HX_HCSTRING("inTry","\x56","\x82","\x08","\xbe"));
	outFields->push(HX_HCSTRING("declared","\xfa","\x58","\xbc","\xc4"));
	super::__GetFields(outFields);
};

#if HXCPP_SCRIPTABLE
static hx::StorageInfo Interp_obj_sMemberStorageInfo[] = {
	{hx::fsObject /*::haxe::ds::StringMap*/ ,(int)offsetof(Interp_obj,variables),HX_HCSTRING("variables","\xb7","\xe2","\x62","\x82")},
	{hx::fsObject /*::haxe::ds::StringMap*/ ,(int)offsetof(Interp_obj,locals),HX_HCSTRING("locals","\xa8","\x74","\xbf","\x59")},
	{hx::fsObject /*::haxe::ds::StringMap*/ ,(int)offsetof(Interp_obj,binops),HX_HCSTRING("binops","\xcb","\x59","\x16","\xed")},
	{hx::fsInt,(int)offsetof(Interp_obj,depth),HX_HCSTRING("depth","\x03","\xf1","\x29","\xd7")},
	{hx::fsBool,(int)offsetof(Interp_obj,inTry),HX_HCSTRING("inTry","\x56","\x82","\x08","\xbe")},
	{hx::fsObject /*cpp::ArrayBase*/ ,(int)offsetof(Interp_obj,declared),HX_HCSTRING("declared","\xfa","\x58","\xbc","\xc4")},
	{ hx::fsUnknown, 0, null()}
};
static hx::StaticInfo *Interp_obj_sStaticStorageInfo = 0;
#endif

static ::String Interp_obj_sMemberFields[] = {
	HX_HCSTRING("variables","\xb7","\xe2","\x62","\x82"),
	HX_HCSTRING("locals","\xa8","\x74","\xbf","\x59"),
	HX_HCSTRING("binops","\xcb","\x59","\x16","\xed"),
	HX_HCSTRING("depth","\x03","\xf1","\x29","\xd7"),
	HX_HCSTRING("inTry","\x56","\x82","\x08","\xbe"),
	HX_HCSTRING("declared","\xfa","\x58","\xbc","\xc4"),
	HX_HCSTRING("posInfos","\x11","\x82","\x2e","\x5a"),
	HX_HCSTRING("initOps","\x02","\x63","\x8b","\xcb"),
	HX_HCSTRING("assign","\x2f","\x46","\x06","\x4c"),
	HX_HCSTRING("assignOp","\x30","\xb5","\xc7","\x0e"),
	HX_HCSTRING("evalAssignOp","\xec","\xd8","\x94","\x19"),
	HX_HCSTRING("increment","\x2f","\x06","\xff","\x31"),
	HX_HCSTRING("execute","\x35","\x0a","\x0d","\xcc"),
	HX_HCSTRING("exprReturn","\xc5","\x6b","\xed","\x86"),
	HX_HCSTRING("duplicate","\x8b","\x21","\x17","\xa1"),
	HX_HCSTRING("restore","\x4e","\x67","\xb0","\x6a"),
	HX_HCSTRING("edef","\x80","\xc6","\x0e","\x43"),
	HX_HCSTRING("error","\xc8","\xcb","\x29","\x73"),
	HX_HCSTRING("resolve","\xec","\x12","\x60","\x67"),
	HX_HCSTRING("expr","\x35","\xfd","\x1d","\x43"),
	HX_HCSTRING("doWhileLoop","\xaa","\x01","\x97","\x3a"),
	HX_HCSTRING("whileLoop","\xb5","\x42","\x98","\xe1"),
	HX_HCSTRING("makeIterator","\xfc","\xdd","\x72","\xd8"),
	HX_HCSTRING("forLoop","\x0d","\x52","\x69","\xc9"),
	HX_HCSTRING("isMap","\xd2","\x34","\x51","\xc1"),
	HX_HCSTRING("getMapValue","\xeb","\xb1","\xee","\xce"),
	HX_HCSTRING("setMapValue","\xf7","\xb8","\x5b","\xd9"),
	HX_HCSTRING("get","\x96","\x80","\x4e","\x00"),
	HX_HCSTRING("set","\xa2","\x9b","\x57","\x00"),
	HX_HCSTRING("fcall","\x04","\x44","\x99","\xfc"),
	HX_HCSTRING("call","\x9e","\x18","\xba","\x41"),
	HX_HCSTRING("cnew","\xdd","\xef","\xc3","\x41"),
	::String(null()) };

static void Interp_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(Interp_obj::__mClass,"__mClass");
};

#ifdef HXCPP_VISIT_ALLOCS
static void Interp_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(Interp_obj::__mClass,"__mClass");
};

#endif

hx::Class Interp_obj::__mClass;

void Interp_obj::__register()
{
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("hscript.Interp","\x8f","\x7c","\xf0","\x9a");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = Interp_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = hx::Class_obj::dupFunctions(Interp_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< Interp_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = Interp_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = Interp_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = Interp_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace hscript
