// Generated by Haxe 3.3.0
#include <hxcpp.h>

#ifndef INCLUDED_openfl__internal_renderer_DrawCommandBuffer
#include <openfl/_internal/renderer/DrawCommandBuffer.h>
#endif
#ifndef INCLUDED_openfl__internal_renderer_DrawCommandReader
#include <openfl/_internal/renderer/DrawCommandReader.h>
#endif
#ifndef INCLUDED_openfl__internal_renderer__DrawCommandReader_DrawPathView_Impl_
#include <openfl/_internal/renderer/_DrawCommandReader/DrawPathView_Impl_.h>
#endif

namespace openfl{
namespace _internal{
namespace renderer{
namespace _DrawCommandReader{

void DrawPathView_Impl__obj::__construct() { }

Dynamic DrawPathView_Impl__obj::__CreateEmpty() { return new DrawPathView_Impl__obj; }

hx::ObjectPtr< DrawPathView_Impl__obj > DrawPathView_Impl__obj::__new()
{
	hx::ObjectPtr< DrawPathView_Impl__obj > _hx_result = new DrawPathView_Impl__obj();
	_hx_result->__construct();
	return _hx_result;
}

Dynamic DrawPathView_Impl__obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< DrawPathView_Impl__obj > _hx_result = new DrawPathView_Impl__obj();
	_hx_result->__construct();
	return _hx_result;
}

 ::openfl::_internal::renderer::DrawCommandReader DrawPathView_Impl__obj::_new( ::openfl::_internal::renderer::DrawCommandReader d){
            	HX_STACK_FRAME("openfl._internal.renderer._DrawCommandReader.DrawPathView_Impl_","_new",0x6624da59,"openfl._internal.renderer._DrawCommandReader.DrawPathView_Impl_._new","openfl/_internal/renderer/DrawCommandReader.hx",331,0xbbdbd1ae)
            	HX_STACK_ARG(d,"d")
HXLINE( 331)		return d;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(DrawPathView_Impl__obj,_new,return )

::Array< Int > DrawPathView_Impl__obj::get_commands( ::openfl::_internal::renderer::DrawCommandReader this1){
            	HX_STACK_FRAME("openfl._internal.renderer._DrawCommandReader.DrawPathView_Impl_","get_commands",0xd5b6e1c9,"openfl._internal.renderer._DrawCommandReader.DrawPathView_Impl_.get_commands","openfl/_internal/renderer/DrawCommandReader.hx",332,0xbbdbd1ae)
            	HX_STACK_ARG(this1,"this1")
HXLINE( 332)		return ( (::Array< Int >)(this1->buffer->o->__get(this1->oPos)) );
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(DrawPathView_Impl__obj,get_commands,return )

::Array< Float > DrawPathView_Impl__obj::get_data( ::openfl::_internal::renderer::DrawCommandReader this1){
            	HX_STACK_FRAME("openfl._internal.renderer._DrawCommandReader.DrawPathView_Impl_","get_data",0xa4b5b2ab,"openfl._internal.renderer._DrawCommandReader.DrawPathView_Impl_.get_data","openfl/_internal/renderer/DrawCommandReader.hx",333,0xbbdbd1ae)
            	HX_STACK_ARG(this1,"this1")
HXLINE( 333)		return ( (::Array< Float >)(this1->buffer->o->__get((this1->oPos + (int)1))) );
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(DrawPathView_Impl__obj,get_data,return )

::String DrawPathView_Impl__obj::get_winding( ::openfl::_internal::renderer::DrawCommandReader this1){
            	HX_STACK_FRAME("openfl._internal.renderer._DrawCommandReader.DrawPathView_Impl_","get_winding",0x6a43f339,"openfl._internal.renderer._DrawCommandReader.DrawPathView_Impl_.get_winding","openfl/_internal/renderer/DrawCommandReader.hx",334,0xbbdbd1ae)
            	HX_STACK_ARG(this1,"this1")
HXLINE( 334)		return ( (::String)(this1->buffer->o->__get((this1->oPos + (int)2))) );
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(DrawPathView_Impl__obj,get_winding,return )


DrawPathView_Impl__obj::DrawPathView_Impl__obj()
{
}

bool DrawPathView_Impl__obj::__GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"_new") ) { outValue = _new_dyn(); return true; }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"get_data") ) { outValue = get_data_dyn(); return true; }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"get_winding") ) { outValue = get_winding_dyn(); return true; }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"get_commands") ) { outValue = get_commands_dyn(); return true; }
	}
	return false;
}

#if HXCPP_SCRIPTABLE
static hx::StorageInfo *DrawPathView_Impl__obj_sMemberStorageInfo = 0;
static hx::StaticInfo *DrawPathView_Impl__obj_sStaticStorageInfo = 0;
#endif

static void DrawPathView_Impl__obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(DrawPathView_Impl__obj::__mClass,"__mClass");
};

#ifdef HXCPP_VISIT_ALLOCS
static void DrawPathView_Impl__obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(DrawPathView_Impl__obj::__mClass,"__mClass");
};

#endif

hx::Class DrawPathView_Impl__obj::__mClass;

static ::String DrawPathView_Impl__obj_sStaticFields[] = {
	HX_HCSTRING("_new","\x61","\x15","\x1f","\x3f"),
	HX_HCSTRING("get_commands","\xd1","\x64","\x6f","\x73"),
	HX_HCSTRING("get_data","\xb3","\x11","\x1e","\xc2"),
	HX_HCSTRING("get_winding","\x31","\xa9","\x6a","\x6e"),
	::String(null())
};

void DrawPathView_Impl__obj::__register()
{
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("openfl._internal.renderer._DrawCommandReader.DrawPathView_Impl_","\x76","\xbe","\x94","\x19");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &DrawPathView_Impl__obj::__GetStatic;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = DrawPathView_Impl__obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(DrawPathView_Impl__obj_sStaticFields);
	__mClass->mMembers = hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = hx::TCanCast< DrawPathView_Impl__obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = DrawPathView_Impl__obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = DrawPathView_Impl__obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = DrawPathView_Impl__obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace openfl
} // end namespace _internal
} // end namespace renderer
} // end namespace _DrawCommandReader
