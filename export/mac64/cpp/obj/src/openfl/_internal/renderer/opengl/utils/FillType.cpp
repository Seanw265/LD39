// Generated by Haxe 3.3.0
#include <hxcpp.h>

#ifndef INCLUDED_openfl__internal_renderer_opengl_utils_FillType
#include <openfl/_internal/renderer/opengl/utils/FillType.h>
#endif
#ifndef INCLUDED_openfl_display_BitmapData
#include <openfl/display/BitmapData.h>
#endif
#ifndef INCLUDED_openfl_display_IBitmapDrawable
#include <openfl/display/IBitmapDrawable.h>
#endif
#ifndef INCLUDED_openfl_geom_Matrix
#include <openfl/geom/Matrix.h>
#endif
namespace openfl{
namespace _internal{
namespace renderer{
namespace opengl{
namespace utils{

::openfl::_internal::renderer::opengl::utils::FillType FillType_obj::Color(Int color,Float alpha)
{
	return hx::CreateEnum< FillType_obj >(HX_("Color",43,e1,89,dd),1,2)->_hx_init(0,color)->_hx_init(1,alpha);
}

::openfl::_internal::renderer::opengl::utils::FillType FillType_obj::Gradient;

::openfl::_internal::renderer::opengl::utils::FillType FillType_obj::None;

::openfl::_internal::renderer::opengl::utils::FillType FillType_obj::Texture( ::openfl::display::BitmapData bitmap, ::openfl::geom::Matrix matrix,Bool repeat,Bool smooth)
{
	return hx::CreateEnum< FillType_obj >(HX_("Texture",bb,f0,31,6c),2,4)->_hx_init(0,bitmap)->_hx_init(1,matrix)->_hx_init(2,repeat)->_hx_init(3,smooth);
}

bool FillType_obj::__GetStatic(const ::String &inName, ::Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	if (inName==HX_("Color",43,e1,89,dd)) { outValue = FillType_obj::Color_dyn(); return true; }
	if (inName==HX_("Gradient",10,f6,f0,03)) { outValue = FillType_obj::Gradient; return true; }
	if (inName==HX_("None",d8,3e,e3,33)) { outValue = FillType_obj::None; return true; }
	if (inName==HX_("Texture",bb,f0,31,6c)) { outValue = FillType_obj::Texture_dyn(); return true; }
	return super::__GetStatic(inName, outValue, inCallProp);
}

HX_DEFINE_CREATE_ENUM(FillType_obj)

int FillType_obj::__FindIndex(::String inName)
{
	if (inName==HX_("Color",43,e1,89,dd)) return 1;
	if (inName==HX_("Gradient",10,f6,f0,03)) return 3;
	if (inName==HX_("None",d8,3e,e3,33)) return 0;
	if (inName==HX_("Texture",bb,f0,31,6c)) return 2;
	return super::__FindIndex(inName);
}

STATIC_HX_DEFINE_DYNAMIC_FUNC2(FillType_obj,Color,return)

STATIC_HX_DEFINE_DYNAMIC_FUNC4(FillType_obj,Texture,return)

int FillType_obj::__FindArgCount(::String inName)
{
	if (inName==HX_("Color",43,e1,89,dd)) return 2;
	if (inName==HX_("Gradient",10,f6,f0,03)) return 0;
	if (inName==HX_("None",d8,3e,e3,33)) return 0;
	if (inName==HX_("Texture",bb,f0,31,6c)) return 4;
	return super::__FindArgCount(inName);
}

hx::Val FillType_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	if (inName==HX_("Color",43,e1,89,dd)) return Color_dyn();
	if (inName==HX_("Gradient",10,f6,f0,03)) return Gradient;
	if (inName==HX_("None",d8,3e,e3,33)) return None;
	if (inName==HX_("Texture",bb,f0,31,6c)) return Texture_dyn();
	return super::__Field(inName,inCallProp);
}

static ::String FillType_obj_sStaticFields[] = {
	HX_("None",d8,3e,e3,33),
	HX_("Color",43,e1,89,dd),
	HX_("Texture",bb,f0,31,6c),
	HX_("Gradient",10,f6,f0,03),
	::String(null())
};

static void FillType_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(FillType_obj::Gradient,"Gradient");
	HX_MARK_MEMBER_NAME(FillType_obj::None,"None");
};

#ifdef HXCPP_VISIT_ALLOCS
static void FillType_obj_sVisitStatic(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(FillType_obj::__mClass,"__mClass");
	HX_VISIT_MEMBER_NAME(FillType_obj::Gradient,"Gradient");
	HX_VISIT_MEMBER_NAME(FillType_obj::None,"None");
};
#endif

hx::Class FillType_obj::__mClass;

Dynamic __Create_FillType_obj() { return new FillType_obj; }

void FillType_obj::__register()
{

hx::Static(__mClass) = hx::_hx_RegisterClass(HX_HCSTRING("openfl._internal.renderer.opengl.utils.FillType","\xbe","\x48","\x92","\x56"), hx::TCanCast< FillType_obj >,FillType_obj_sStaticFields,0,
	&__Create_FillType_obj, &__Create,
	&super::__SGetClass(), &CreateFillType_obj, FillType_obj_sMarkStatics
#ifdef HXCPP_VISIT_ALLOCS
    , FillType_obj_sVisitStatic
#endif
#ifdef HXCPP_SCRIPTABLE
    , 0
#endif
);
	__mClass->mGetStaticField = &FillType_obj::__GetStatic;
}

void FillType_obj::__boot()
{
Gradient = hx::CreateEnum< FillType_obj >(HX_HCSTRING("Gradient","\x10","\xf6","\xf0","\x03"),3,0);
None = hx::CreateEnum< FillType_obj >(HX_HCSTRING("None","\xd8","\x3e","\xe3","\x33"),0,0);
}


} // end namespace openfl
} // end namespace _internal
} // end namespace renderer
} // end namespace opengl
} // end namespace utils
